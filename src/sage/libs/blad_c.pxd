# This file is automatically generated from the blad header files

cdef extern from "blad.h":
    ctypedef int bool
    ctypedef long ba0_int_p
    ctypedef int ba0_int_hp
    ctypedef unsigned int ba0_mint_hp
    ctypedef long size_t
    ctypedef long time_t
    struct __mpz_struct:
        pass
    struct __mpq_struct:
        pass
    struct __mpfr_struct:
        pass
    struct ba0_mpz_t:
        pass
    struct ba0_mpzm_t:
        pass
    struct ba0_mpq_t:
        pass
    struct ba0_mpfr_t:
        pass
    struct ba0_mint_hp_t:
        pass
    struct FILE:
        pass
    enum ba0_compare_code:
        ba0_lt
        ba0_eq
        ba0_equiv
        ba0_gt
    enum ba0_sort_mode:
        ba0_descending_mode
        ba0_ascending_mode
    enum ba0_garbage_code:
        ba0_isolated
        ba0_embedded
    enum ba0_restart_level:
        ba0_init_level = 1
        ba0_reset_level
        ba0_done_level
    enum ba0_wang_code:
        ba0_rational_found
        ba0_rational_not_found
        ba0_zero_divisor
    ctypedef void* ba0_scanf_function (void*)
    ctypedef void ba0_printf_function (void*)
    ctypedef ba0_int_p ba0_garbage1_function (
        void*,
        ba0_garbage_code)
    ctypedef void* ba0_garbage2_function (
        void*,
        ba0_garbage_code)
    ctypedef void* ba0_copy_function (void*)
    ctypedef void* ba0_unary_function (void*)
    ctypedef bool ba0_cmp_function (
        void*,
        void*)
    ctypedef bool ba0_cmp2_function (
        void*,
        void*,
        void*)
    ctypedef bool ba0_unary_predicate (void*)
    ctypedef void* ba0_new_function ()
    ctypedef void ba0_set_function (
        void*,
        void*)
    ctypedef void ba0_init_function (void*)
    ctypedef void ba0_unary_operation (void*)
    ctypedef void ba0_binary_operation (
        void*,
        void*)
    ctypedef void ba0_ternary_operation (
        void*,
        void*,
        void*)
    void ba0_reset_all_settings ()
    void ba0_set_settings_interrupt (
        void (*)(),
        time_t)
    void ba0_set_settings_common (ba0_restart_level)
    void ba0_get_settings_interrupt (
        void (**)(),
        time_t*)
    void ba0_set_settings_no_oot (bool)
    void ba0_get_settings_no_oot (bool*)
    void ba0_get_settings_common (ba0_restart_level*)
    void ba0_process_check_interrupt ()
    char* ba0_get_version ()
    void ba0_restart (
        ba0_int_p,
        ba0_int_p)
    void ba0_terminate (ba0_restart_level)
    void ba0_print_mem_stats ()
    struct ba0_table:
        ba0_int_p alloc
        ba0_int_p size
        void** tab
    struct ba0_tableof_table:
        ba0_int_p alloc
        ba0_int_p size
        ba0_table** tab
    ba0_int_p ba0_sizeof_table (ba0_table*)
    void ba0_re_malloc_table (
        ba0_table*,
        ba0_int_p)
    void ba0_realloc_table (
        ba0_table*,
        ba0_int_p)
    void ba0_realloc2_table (
        ba0_table*,
        ba0_int_p,
        ba0_new_function*)
    void ba0_init_table (ba0_table*)
    void ba0_reset_table (ba0_table*)
    ba0_table* ba0_new_table ()
    void ba0_set_table (
        ba0_table*,
        ba0_table*)
    void ba0_delete_table (
        ba0_table*,
        ba0_int_p)
    void ba0_insert_table (
        ba0_table*,
        ba0_int_p,
        void*)
    bool ba0_member_table (
        void*,
        ba0_table*)
    bool ba0_member2_table (
        void*,
        ba0_table*,
        ba0_int_p*)
    bool ba0_equal_table (
        ba0_table*,
        ba0_table*)
    void ba0_unique_table (
        ba0_table*,
        ba0_table*)
    bool ba0_is_unique_table (ba0_table*)
    void ba0_reverse_table (
        ba0_table*,
        ba0_table*)
    void ba0_concat_table (
        ba0_table*,
        ba0_table*,
        ba0_table*)
    void ba0_move_to_tail_table (
        ba0_table*,
        ba0_table*,
        ba0_int_p)
    void ba0_move_from_tail_table (
        ba0_table*,
        ba0_table*,
        ba0_int_p)
    struct ba0_list:
        pass
    void ba0_set_table_list (
        ba0_table*,
        ba0_list*)
    struct ba0_array:
        ba0_int_p alloc
        ba0_int_p size
        char* tab
        ba0_int_p sizelt
    void ba0_realloc_array (
        ba0_array*,
        ba0_int_p,
        ba0_int_p)
    void ba0_realloc2_array (
        ba0_array*,
        ba0_int_p,
        ba0_int_p,
        ba0_init_function*)
    void ba0_init_array (ba0_array*)
    void ba0_reset_array (ba0_array*)
    ba0_array* ba0_new_array ()
    void ba0_set_array (
        ba0_array*,
        ba0_array*)
    void ba0_delete_array (
        ba0_array*,
        ba0_int_p)
    void ba0_reverse_array (
        ba0_array*,
        ba0_array*)
    void ba0_concat_array (
        ba0_array*,
        ba0_array*,
        ba0_array*)
    struct ba0_list:
        void* value
        ba0_list* next
    ba0_list* ba0_sort_list (
        ba0_list*,
        ba0_cmp_function*)
    ba0_list* ba0_sort2_list (
        ba0_list*,
        ba0_cmp2_function*,
        void*)
    ba0_list* ba0_select_list (
        ba0_list*,
        ba0_unary_predicate*)
    ba0_list* ba0_delete_list (
        ba0_list*,
        ba0_unary_predicate*)
    ba0_list* ba0_insert_list (
        void*,
        ba0_list*,
        ba0_cmp_function*)
    ba0_list* ba0_insert2_list (
        void*,
        ba0_list*,
        ba0_cmp2_function*,
        void*)
    bool ba0_member_list (
        void*,
        ba0_list*)
    void* ba0_last_list (ba0_list*)
    ba0_list* ba0_butlast_list (ba0_list*)
    ba0_list* ba0_copy_list (ba0_list*)
    ba0_list* ba0_cons_list (
        void*,
        ba0_list*)
    ba0_list* ba0_endcons_list (
        void*,
        ba0_list*)
    ba0_list* ba0_reverse_list (ba0_list*)
    ba0_list* ba0_concat_list (
        ba0_list*,
        ba0_list*)
    void ba0_move_to_head_list (
        ba0_list*,
        ba0_int_p)
    ba0_int_p ba0_length_list (ba0_list*)
    void* ba0_ith_list (
        ba0_list*,
        ba0_int_p)
    ba0_list* ba0_map_list (
        ba0_unary_function*,
        ba0_list*)
    struct ba0_matrix:
        ba0_int_p alloc
        ba0_int_p nrow
        ba0_int_p ncol
        void** entry
    void ba0_realloc_matrix (
        ba0_matrix*,
        ba0_int_p,
        ba0_int_p)
    void ba0_realloc2_matrix (
        ba0_matrix*,
        ba0_int_p,
        ba0_int_p,
        ba0_new_function*)
    void ba0_init_matrix (ba0_matrix*)
    void ba0_reset_matrix (ba0_matrix*)
    ba0_matrix* ba0_new_matrix ()
    void ba0_set_matrix_unity (
        ba0_matrix*,
        ba0_int_p,
        ba0_new_function*,
        ba0_unary_operation*,
        ba0_unary_operation*)
    void ba0_set_matrix (
        ba0_matrix*,
        ba0_matrix*)
    void ba0_set_matrix2 (
        ba0_matrix*,
        ba0_matrix*,
        ba0_new_function*,
        ba0_binary_operation*)
    void ba0_set_matrix_unity (
        ba0_matrix*,
        ba0_int_p,
        ba0_new_function*,
        ba0_unary_operation*,
        ba0_unary_operation*)
    bool ba0_is_zero_matrix (
        ba0_matrix*,
        ba0_unary_predicate*)
    bool ba0_is_unity_matrix (
        ba0_matrix*,
        ba0_unary_predicate*,
        ba0_unary_predicate*)
    void ba0_swap_rows_matrix (
        ba0_matrix*,
        ba0_int_p,
        ba0_int_p)
    void ba0_swap_columns_matrix (
        ba0_matrix*,
        ba0_int_p,
        ba0_int_p)
    void ba0_add_matrix (
        ba0_matrix*,
        ba0_matrix*,
        ba0_matrix*,
        ba0_new_function*,
        ba0_ternary_operation*)
    void ba0_mul_matrix (
        ba0_matrix*,
        ba0_matrix*,
        ba0_matrix*,
        ba0_new_function*,
        ba0_unary_operation*,
        ba0_binary_operation*,
        ba0_ternary_operation*,
        ba0_ternary_operation*)
    struct ba0_value:
        void* var
        void* value
    struct ba0_point:
        ba0_int_p alloc
        ba0_int_p size
        ba0_value** tab
    void ba0_init_value (ba0_value*)
    ba0_value* ba0_new_value ()
    void ba0_init_point (ba0_point*)
    ba0_point* ba0_new_point ()
    void ba0_set_point (
        ba0_point*,
        ba0_point*)
    void ba0_sort_point (
        ba0_point*,
        ba0_point*)
    bool ba0_is_sorted_point (ba0_point*)
    void ba0_delete_coord_point (
        ba0_point*,
        ba0_point*,
        ba0_int_p)
    ba0_value* ba0_bsearch_point (
        void*,
        ba0_point*,
        ba0_int_p*)
    ba0_value* ba0_assoc_point (
        void*,
        ba0_point*,
        ba0_int_p*)
    struct ba0_tableof_int_p:
        ba0_int_p alloc
        ba0_int_p size
        ba0_int_p* tab
    struct ba0_tableof_unsigned_int_p:
        ba0_int_p alloc
        ba0_int_p size
        ba0_int_p* tab
    struct ba0_matrixof_int_p:
        ba0_int_p alloc
        ba0_int_p nrow
        ba0_int_p ncol
        ba0_int_p* entry
    struct ba0_listof_int_p:
        ba0_int_p value
        ba0_listof_int_p* next
    struct ba0_tableof_tableof_int_p:
        ba0_int_p alloc
        ba0_int_p size
        ba0_tableof_int_p** tab
    struct ba0_mark:
        ba0_stack* stack
        ba0_int_p index_in_cells
        void* address
        ba0_int_p memory_left
    struct ba0_stack:
        char* ident
        ba0_table cells
        ba0_tableof_unsigned_int_p sizes
        ba0_int_p default_size
        bool resizable
        ba0_mark free
        ba0_mark max_alloc
        ba0_int_p nb_calls_to_alloc
        ba0_int_p* bound
    struct ba0_tableof_stack:
        ba0_int_p alloc
        ba0_int_p size
        ba0_stack** tab
    void ba0_set_settings_no_oom (bool)
    void ba0_get_settings_no_oom (bool*)
    void ba0_set_settings_stack (
        ba0_int_p,
        ba0_int_p,
        ba0_int_p,
        ba0_int_p,
        ba0_int_p)
    void ba0_get_settings_stack (
        ba0_int_p*,
        ba0_int_p*,
        ba0_int_p*,
        ba0_int_p*,
        ba0_int_p*)
    void ba0_init_stack_of_stacks ()
    void ba0_reset_stack_of_stacks ()
    void ba0_clear_stack_of_stacks ()
    void ba0_set_settings_memory_functions (
        void* (*)(size_t),
        void (*)(void*))
    void ba0_get_settings_memory_functions (
        void* (**)(size_t),
        void (**)(void*))
    ba0_int_p ba0_ceil_align (ba0_int_p)
    ba0_int_p ba0_allocated_size (ba0_int_p)
    void* ba0_malloc (ba0_int_p)
    void* ba0_persistent_malloc (ba0_int_p)
    void ba0_free (void*)
    ba0_int_p ba0_cell_index_mark (
        void*,
        ba0_mark*)
    bool ba0_in_stack (
        void*,
        ba0_stack*)
    ba0_stack* ba0_which_stack (void*)
    ba0_stack* ba0_current_stack ()
    ba0_int_p ba0_max_alloc_stack (ba0_stack*)
    void ba0_push_stack (ba0_stack*)
    void ba0_pull_stack ()
    void ba0_push_another_stack ()
    void ba0_init_stack (ba0_stack*)
    void ba0_init_one_cell_stack (
        ba0_stack*,
        char*,
        void*,
        ba0_int_p)
    void ba0_reset_stack (ba0_stack*)
    void ba0_reset_cell_stack (ba0_stack*)
    void ba0_clear_cells_stack (ba0_stack*)
    void ba0_clear_one_cell_stack (ba0_stack*)
    void ba0_clear_stack (ba0_stack*)
    void* ba0_alloc_but_do_not_set_magic (ba0_int_p)
    void ba0_alloc_set_magic ()
    void* ba0_alloc (ba0_int_p)
    ba0_int_p ba0_memory_left_in_cell ()
    void ba0_t1_alloc (
        ba0_int_p,
        ba0_int_p,
        void**,
        ba0_int_p*)
    void ba0_t2_alloc (
        ba0_int_p,
        ba0_int_p,
        ba0_int_p,
        void**,
        void**,
        ba0_int_p*)
    void ba0_rotate_cells (ba0_int_p)
    void* ba0_alloc_mark (
        ba0_mark*,
        ba0_int_p)
    void ba0_record (ba0_mark*)
    void ba0_restore (ba0_mark*)
    ba0_int_p ba0_range_mark (
        ba0_mark*,
        ba0_mark*)
    struct ba0_exception:
         pass
    ctypedef void ba0_extra_restore_function (ba0_int_p)
    struct ba0_exception_extra:
         pass
    struct ba0_exception_code:
         pass
    struct ba0_exception_log:
         pass
    void ba0_reset_exception_extra_stack ()
    void ba0_push_exception_extra_stack (
        ba0_int_p*,
        ba0_extra_restore_function*)
    void ba0_pull_exception_extra_stack ()
    void ba0_reset_exception ()
    void ba0_push_exception (
        char*,
        int)
    void ba0_pull_exception (ba0_exception_code)
    bool ba0_exception_is_raised (ba0_exception_code)
    bool ba0_exception_is_set (ba0_exception_code)
    void ba0_raise_exception (
        char*,
        int,
        char*)
    void ba0_raise_exception2 (
        char*,
        int,
        char*,
        char*,
        void**)
    void ba0_cerr (
        char*,
        int,
        char*)
    ctypedef double* ba0_double
    struct ba0_tableof_double:
        ba0_int_p alloc
        ba0_int_p size
        ba0_double* tab
    struct ba0_arrayof_double:
        ba0_int_p alloc
        ba0_int_p size
        double* tab
        ba0_int_p sizelt
    struct ba0_matrixof_double:
        ba0_int_p alloc
        ba0_int_p nrow
        ba0_int_p ncol
        ba0_double* entry
    ba0_double ba0_new_double ()
    int ba0_isnan (double)
    double ba0_atof (char*)
    struct ba0_tableof_mpz:
        ba0_int_p alloc
        ba0_int_p size
        __mpz_struct** tab
    struct ba0_listof_mpz:
        __mpz_struct* value
        ba0_listof_mpz* next
    struct ba0_tableof_mpq:
        ba0_int_p alloc
        ba0_int_p size
        __mpq_struct** tab
    struct ba0_listof_mpq:
        __mpq_struct* value
        ba0_listof_mpq* next
    ctypedef void ba0_mp_set_memory_functions (
        void* (*)(size_t),
        void* (*)(void*, size_t, size_t),
        void (*)(void*, size_t))
    void ba0_set_settings_gmp (ba0_mp_set_memory_functions*)
    void ba0_get_settings_gmp (ba0_mp_set_memory_functions**)
    void ba0_record_gmp_memory_functions ()
    void ba0_restore_gmp_memory_functions ()
    bool ba0_domain_mpz ()
    bool ba0_domain_mpq ()
    void* ba0_gmp_alloc (size_t)
    void* ba0_gmp_realloc (
        void*,
        size_t,
        size_t)
    void ba0_gmp_free (
        void*,
        size_t)
    __mpq_struct* ba0_new_mpq ()
    __mpz_struct* ba0_new_mpz ()
    void ba0_x64_mpz_set_si (
        __mpz_struct*,
        ba0_int_p)
    void ba0_x64_mpz_set_ui (
        __mpz_struct*,
        ba0_int_p)
    void ba0_x64_mpz_mul_si (
        __mpz_struct*,
        __mpz_struct*,
        ba0_int_p)
    void ba0_x64_mpz_mul_ui (
        __mpz_struct*,
        __mpz_struct*,
        ba0_int_p)
    void ba0_x64_mpz_mul_2exp (
        __mpz_struct*,
        __mpz_struct*,
        ba0_int_p)
    void ba0_x64_mpz_pow_ui (
        __mpz_struct*,
        __mpz_struct*,
        ba0_int_p)
    void ba0_x64_mpz_ui_pow_ui (
        __mpz_struct*,
        ba0_int_p,
        ba0_int_p)
    void ba0_x64_mpz_si_pow_ui (
        __mpz_struct*,
        ba0_int_p,
        ba0_int_p)
    void ba0_x64_mpq_set_si (
        __mpq_struct*,
        ba0_int_p,
        ba0_int_p)
    void ba0_x64_mpq_set_ui (
        __mpq_struct*,
        ba0_int_p,
        ba0_int_p)
    struct ba0_tableof_mpfr:
        ba0_int_p alloc
        ba0_int_p size
        __mpfr_struct** tab
    struct ba0_listof_mpfr:
        __mpfr_struct* value
        ba0_listof_mpfr* next
    struct ba0_arrayof_mpfr:
        ba0_int_p alloc
        ba0_int_p size
        __mpfr_struct* tab
        ba0_int_p sizelt
    __mpfr_struct* ba0_new_mpfr ()
    bool ba0_domain_mpfr ()
    enum ba0_typeof_interval:
        ba0_closed_interval
        ba0_open_interval
        ba0_empty_interval
        ba0_infinite_interval
        ba0_left_infinite_interval
        ba0_right_infinite_interval
    struct ba0_interval_mpq:
        ba0_mpq_t a
        ba0_mpq_t b
        ba0_typeof_interval type
    struct ba0_tableof_interval_mpq:
        ba0_int_p alloc
        ba0_int_p size
        ba0_interval_mpq** tab
    struct ba0_listof_interval_mpq:
        ba0_interval_mpq* value
        ba0_listof_interval_mpq* next
    bool ba0_domain_interval_mpq ()
    void ba0_init_interval_mpq (ba0_interval_mpq*)
    ba0_interval_mpq* ba0_new_interval_mpq ()
    void ba0_set_interval_mpq_si (
        ba0_interval_mpq*,
        ba0_int_p)
    void ba0_set_interval_mpq_ui (
        ba0_interval_mpq*,
        ba0_int_p)
    void ba0_set_interval_mpq_double (
        ba0_interval_mpq*,
        double)
    void ba0_set_interval_mpq_mpq (
        ba0_interval_mpq*,
        ba0_mpq_t,
        ba0_mpq_t)
    void ba0_set_interval_mpq_type_mpq (
        ba0_interval_mpq*,
        ba0_typeof_interval,
        ba0_mpq_t,
        ba0_mpq_t)
    void ba0_set_interval_mpq (
        ba0_interval_mpq*,
        ba0_interval_mpq*)
    bool ba0_is_empty_interval_mpq (ba0_interval_mpq*)
    bool ba0_is_closed_interval_mpq (ba0_interval_mpq*)
    bool ba0_is_open_interval_mpq (ba0_interval_mpq*)
    bool ba0_is_unbounded_interval_mpq (ba0_interval_mpq*)
    bool ba0_is_zero_interval_mpq (ba0_interval_mpq*)
    bool ba0_is_one_interval_mpq (ba0_interval_mpq*)
    bool ba0_are_equal_interval_mpq (
        ba0_interval_mpq*,
        ba0_interval_mpq*)
    bool ba0_contains_zero_interval_mpq (ba0_interval_mpq*)
    bool ba0_is_positive_interval_mpq (ba0_interval_mpq*)
    bool ba0_is_negative_interval_mpq (ba0_interval_mpq*)
    bool ba0_is_nonpositive_interval_mpq (ba0_interval_mpq*)
    bool ba0_is_nonnegative_interval_mpq (ba0_interval_mpq*)
    bool ba0_is_less_interval_mpq (
        ba0_interval_mpq*,
        ba0_interval_mpq*)
    bool ba0_are_disjoint_interval_mpq (
        ba0_interval_mpq*,
        ba0_interval_mpq*)
    bool ba0_is_subset_interval_mpq (
        ba0_interval_mpq*,
        ba0_interval_mpq*)
    void ba0_element_interval_mpq (
        ba0_mpq_t,
        ba0_interval_mpq*,
        ba0_int_p)
    void ba0_middle_interval_mpq (
        ba0_mpq_t,
        ba0_interval_mpq*)
    double ba0_middle_interval_mpq_double (ba0_interval_mpq*)
    void ba0_width_interval_mpq (
        ba0_mpq_t, 
        ba0_interval_mpq*)
    double ba0_width_interval_mpq_double (ba0_interval_mpq*)
    void ba0_middle_interval_mpq (
        ba0_mpq_t,
        ba0_interval_mpq*)
    void ba0_intersect_interval_mpq (
        ba0_interval_mpq*,
        ba0_interval_mpq*,
        ba0_interval_mpq*)
    void ba0_abs_interval_mpq (
        ba0_interval_mpq*,
        ba0_interval_mpq*)
    void ba0_neg_interval_mpq (
        ba0_interval_mpq*,
        ba0_interval_mpq*)
    void ba0_add_interval_mpq (
        ba0_interval_mpq*,
        ba0_interval_mpq*,
        ba0_interval_mpq*)
    void ba0_add_interval_mpq_mpq (
        ba0_interval_mpq*,
        ba0_interval_mpq*,
        ba0_mpq_t)
    void ba0_sub_interval_mpq (
        ba0_interval_mpq*,
        ba0_interval_mpq*,
        ba0_interval_mpq*)
    void ba0_sub_mpq_interval_mpq (
        ba0_interval_mpq*,
        ba0_mpq_t,
        ba0_interval_mpq*)
    void ba0_sub_interval_mpq_mpq (
        ba0_interval_mpq*,
        ba0_interval_mpq*,
        ba0_mpq_t)
    void ba0_mul_interval_mpq (
        ba0_interval_mpq*,
        ba0_interval_mpq*,
        ba0_interval_mpq*)
    void ba0_mul_interval_mpq_mpq (
        ba0_interval_mpq*,
        ba0_interval_mpq*,
        ba0_mpq_t)
    void ba0_mul_interval_mpq_si (
        ba0_interval_mpq*,
        ba0_interval_mpq*,
        ba0_int_p)
    void ba0_mul_interval_mpq_ui (
        ba0_interval_mpq*,
        ba0_interval_mpq*,
        ba0_int_p)
    void ba0_pow_interval_mpq (
        ba0_interval_mpq*,
        ba0_interval_mpq*,
        ba0_int_p)
    void ba0_pow_interval_mpq_mpq (
        ba0_interval_mpq*, 
        ba0_mpq_t, 
        ba0_int_p n)
    void ba0_div_interval_mpq (
        ba0_tableof_interval_mpq*,
        ba0_interval_mpq*,
        ba0_interval_mpq*)
    void ba0_div_mpq_interval_mpq (
        ba0_tableof_interval_mpq*,
        ba0_mpq_t,
        ba0_interval_mpq*)
    void ba0_div_interval_mpq_mpq (
        ba0_interval_mpq*,
        ba0_interval_mpq*,
        ba0_mpq_t)
    ctypedef ba0_interval_mpq ba0_interval_mpq_t [1]
    enum ba0_typeof_device:
        ba0_string_device
        ba0_file_device
        ba0_counter_device
    struct ba0_output_device:
         pass
    void ba0_set_output_FILE (FILE*)
    void ba0_set_output_string (char*)
    void ba0_set_output_counter ()
    void ba0_record_output ()
    void ba0_restore_output ()
    void ba0_reset_output ()
    void ba0_put_char (char)
    void ba0_put_int_p (ba0_int_p)
    void ba0_put_hexint_p (ba0_int_p)
    ba0_int_p ba0_output_counter ()
    struct ba0_input_device:
         pass
    void ba0_set_input_FILE (FILE*)
    void ba0_set_input_string (char*)
    bool ba0_isatty_input ()
    void ba0_reset_input ()
    void ba0_record_input ()
    void ba0_restore_input ()
    int ba0_get_char ()
    void ba0_unget_char (int)
    enum ba0_typeof_token:
        ba0_no_token
        ba0_integer_token
        ba0_sign_token
        ba0_string_token
    struct ba0_token:
        ba0_typeof_token type
        bool spaces_before
        char* value
    struct ba0_analex_token_fifo:
        ba0_token* fifo
        ba0_int_p first, last
    void ba0_set_settings_analex (ba0_int_p)
    void ba0_get_settings_analex (ba0_int_p*)
    char* ba0_get_context_analex ()
    void ba0_write_context_analex ()
    void ba0_init_analex ()
    void ba0_clear_analex ()
    void ba0_reset_analex ()
    void ba0_record_analex ()
    void ba0_restore_analex ()
    void ba0_set_analex_FILE (FILE*)
    void ba0_set_analex_string (char*)
    void ba0_get_token_analex ()
    void ba0_unget_token_analex ()
    void ba0_unget_given_token_analex (
        char*,
        ba0_typeof_token,
        bool)
    bool ba0_sign_token_analex (char*)
    bool ba0_spaces_before_token_analex ()
    ba0_typeof_token ba0_type_token_analex ()
    char* ba0_value_token_analex ()
    enum ba0_typeof_format:
        ba0_leaf_format
        ba0_table_format
        ba0_list_format
        ba0_matrix_format
        ba0_array_format
        ba0_value_format
        ba0_point_format
    struct ba0_format:
        pass
    struct ba0_subformat:
         pass
    struct ba0_format:
        char* text
        ba0_subformat** link
        ba0_int_p linknmb
    void ba0_initialize_format ()
    void ba0_define_format (
        char*,
        ba0_scanf_function*,
        ba0_printf_function*,
        ba0_garbage1_function*,
        ba0_garbage2_function*,
        ba0_copy_function*)
    void ba0_define_format_with_sizelt (
        char*,
        ba0_int_p,
        ba0_scanf_function*,
        ba0_printf_function*,
        ba0_garbage1_function*,
        ba0_garbage2_function*,
        ba0_copy_function*)
    ba0_format* ba0_get_format (char*)
    struct ba0_pair:
        char* identificateur
        void* value
    struct ba0_tableof_pair:
        ba0_int_p alloc
        ba0_int_p size
        ba0_pair** tab
    struct ba0_gc_info:
         pass
    void ba0_garbage (
        char*,
        ba0_mark*,
        ...)
    ba0_int_p ba0_garbage1 (
        char*,
        void*,
        ba0_garbage_code)
    void* ba0_garbage2 (
        char*,
        void*,
        ba0_garbage_code)
    ba0_int_p ba0_new_gc_info (
        void*,
        ba0_int_p,
        char*)
    void* ba0_new_addr_gc_info (
        void*,
        char*)
    void* ba0_copy (
        char*,
        void*)
    void ba0__scanf__ (
        ba0_format*,
        void**,
        bool)
    void ba0_scanf (
        char*,
        ...)
    void ba0_scanf2 (
        char*,
        ...)
    void ba0_sscanf (
        char*,
        char*,
        ...)
    void ba0_sscanf2 (
        char*,
        char*,
        ...)
    void ba0_fscanf (
        FILE*,
        char*,
        ...)
    void ba0_fscanf2 (
        FILE*,
        char*,
        ...)
    void ba0__printf__ (
        ba0_format*,
        void**)
    void ba0_printf (
        char*,
        ...)
    void ba0_sprintf (
        char*,
        char*,
        ...)
    void ba0_fprintf (
        FILE*,
        char*,
        ...)
    char* ba0_new_printf (
        char*,
        ...)
    void ba0_scanf_printf (
        char*,
        char*,
        ...)
    ba0_mint_hp ba0_largest_small_prime ()
    ba0_mint_hp ba0_next_small_prime (ba0_mint_hp)
    ba0_mint_hp ba0_previous_small_prime (ba0_mint_hp)
    struct ba0_tableof_mint_hp:
        ba0_int_p alloc
        ba0_int_p size
        ba0_int_p** tab            
    struct ba0_listof_mint_hp:
        ba0_int_p value            
        ba0_listof_mint_hp* next
    void ba0_reset_mint_hp_module ()
    bool ba0_domain_mint_hp ()
    void ba0_mint_hp_module_set (
        ba0_mint_hp,
        bool)
    ba0_mint_hp ba0_pow_mint_hp (
        ba0_mint_hp,
        ba0_int_p)
    ba0_mint_hp ba0_invert_mint_hp (ba0_mint_hp)
    ba0_wang_code ba0_wang_mint_hp (
        ba0_mpq_t,
        ba0_mint_hp,
        ba0_int_hp*)
    struct ba0_tableof_mpzm:
        ba0_int_p alloc
        ba0_int_p size
        __mpz_struct** tab
    struct ba0_listof_mpzm:
        __mpz_struct* value
        ba0_listof_mpzm* next
    void ba0_init_mpzm_module ()
    void ba0_reset_mpzm_module ()
    bool ba0_domain_mpzm ()
    void ba0_mpzm_module_set_ui (
        ba0_int_p,
        bool)
    void ba0_mpzm_module_set (
        ba0_mpz_t,
        bool)
    void ba0_mpzm_module_mul (mpz_t)
    void ba0_mpzm_module_pow_ui (
        ba0_mpz_t,
        ba0_int_p,
        bool)
    __mpz_struct* ba0_new_mpzm ()
    ba0_wang_code ba0_wang_mpzm (
        ba0_mpq_t,
        ba0_mpz_t,
        ba0_mpz_t)
    struct ba0_tableof_string:
        ba0_int_p alloc
        ba0_int_p size
        char** tab
    struct ba0_matrixof_string:
        ba0_int_p alloc
        ba0_int_p nrow
        ba0_int_p ncol
        char** entry
    struct ba0_listof_string:
        char* value
        ba0_listof_string* next
    struct ba0_tableof_tableof_string:
        ba0_int_p alloc
        ba0_int_p size
        ba0_tableof_string** tab
    char* ba0_not_a_string ()
    char* ba0_new_string ()
    char* ba0_strdup (char*)
    char* ba0_strcat (ba0_tableof_string*)
    int ba0_strcasecmp (
        char*,
        char*)
    int ba0_strncasecmp (
        char*,
        char*,
        size_t)
    struct ba0_indexed:
        pass
    struct ba0_indices:
        pass
    struct ba0_tableof_indexed:
        ba0_int_p alloc
        ba0_int_p size
        ba0_indexed** tab
    struct ba0_tableof_indices:
        ba0_int_p alloc
        ba0_int_p size
        ba0_indices** tab
    struct ba0_indices:
        char po, pf
        ba0_tableof_indexed Tindex
    struct ba0_indexed:
        char* string
        ba0_tableof_indices Tindic
    ctypedef void ba0_indexed_function (ba0_indexed*)
    void ba0_init_indexed (ba0_indexed*)
    void ba0_reset_indexed (ba0_indexed*)
    ba0_indexed* ba0_new_indexed ()
    void ba0_set_indexed (
        ba0_indexed*,
        ba0_indexed*)
    char* ba0_indexed_to_string (ba0_indexed*)
    ba0_indexed* ba0_scanf_indexed (
        ba0_indexed*,
        bool*,
        bool (*)(char*))
    struct ba0_initialized_global:
         pass
    ctypedef ba0_int_p bav_Idegree
    ctypedef ba0_int_p bav_Iordering
    ctypedef ba0_int_p bav_Inumber
    ctypedef ba0_int_p bav_Iorder
    struct bav_tableof_Inumber:
        ba0_int_p alloc
        ba0_int_p size
        bav_Inumber* tab
    struct bav_tableof_Iorder:
        ba0_int_p alloc
        ba0_int_p size
        bav_Iorder* tab
    struct bav_tableof_Iordering:
        ba0_int_p alloc
        ba0_int_p size
        bav_Iordering* tab
    struct bav_tableof_Idegree:
        ba0_int_p alloc
        ba0_int_p size
        bav_Idegree* tab
    void bav_set_settings_common (ba0_indexed_function*)
    void bav_get_settings_common (ba0_indexed_function**)
    void bav_reset_all_settings ()
    void bav_restart (
        ba0_int_p,
        ba0_int_p)
    void bav_terminate (ba0_restart_level)
    enum bav_typeof_symbol:
        bav_independent_symbol
        bav_dependent_symbol
        bav_operator_symbol
        bav_temporary_symbol
    struct bav_symbol:
        char* ident
        bav_typeof_symbol type
        ba0_int_p index
        ba0_int_p derivation_index
    struct bav_tableof_symbol:
        ba0_int_p alloc
        ba0_int_p size
        bav_symbol** tab
    void bav_set_settings_symbol (
        ba0_scanf_function*,
        ba0_printf_function*)
    void bav_get_settings_symbol (
        ba0_scanf_function**,
        ba0_printf_function**)
    void bav_init_symbol (bav_symbol*)
    bav_symbol* bav_new_symbol ()
    bav_symbol* bav_not_a_symbol ()
    bool bav_is_a_derivation (char*)
    struct bav_differential_ring:
        pass
    bav_symbol* bav_switch_ring_symbol (
        bav_symbol*,
        bav_differential_ring*)
    struct bav_parameter:
        bav_symbol* root
        bav_tableof_symbol dep
    struct bav_tableof_parameter:
        ba0_int_p alloc
        ba0_int_p size
        bav_parameter** tab
    void bav_init_parameters (bav_tableof_parameter*)
    bav_tableof_parameter* bav_new_parameters ()
    void bav_reset_parameters (bav_tableof_parameter*)
    ba0_int_p bav_sizeof_parameters (bav_tableof_parameter*)
    void bav_set_parameters (
        bav_tableof_parameter*,
        bav_tableof_parameter*)
    struct bav_differential_ring:
        pass
    void bav_switch_ring_parameters (
        bav_tableof_parameter*,
        bav_differential_ring*)
    void bav_init_parameter (bav_parameter*)
    bav_parameter* bav_new_parameter ()
    void bav_set_parameter (
        bav_parameter*,
        bav_parameter*)
    void bav_set_parameter_symbol_table (
        bav_parameter*,
        bav_symbol*,
        bav_tableof_symbol*)
    bool bav_is_a_parameter (
        bav_symbol*,
        ba0_int_p*,
        bav_tableof_parameter*)
    struct bav_variable:
        pass
    bool bav_is_zero_derivative_of_parameter (
        bav_variable*,
        bav_tableof_parameter*)
    struct bav_tableof_variable:
        pass
    void bav_zero_derivatives_of_parameter (
        bav_tableof_variable*,
        bav_parameter*)
    void bav_zero_derivatives_of_tableof_parameter (
        bav_tableof_variable*,
        bav_tableof_parameter*)
    struct bav_variable:
        pass
    struct bav_tableof_variable:
        ba0_int_p alloc
        ba0_int_p size
        bav_variable** tab
    struct bav_tableof_tableof_variable:
        ba0_int_p alloc
        ba0_int_p size
        bav_tableof_variable** tab
    struct bav_variable:
        bav_symbol* root
        ba0_int_p hack
        ba0_int_p index
        bav_tableof_Inumber number
        bav_tableof_Iorder order
        bav_tableof_variable derivative
    struct bav_term:
        pass
    struct bav_tableof_parameter:
        pass
    void bav_set_settings_variable (
        ba0_scanf_function*,
        ba0_printf_function*,
        char*)
    void bav_get_settings_variable (
        ba0_scanf_function**,
        ba0_printf_function**,
        char**)
    void bav_init_variable (bav_variable*)
    bav_variable* bav_new_variable ()
    bav_variable* bav_not_a_variable ()
    bav_Iorder bav_order_variable (
        bav_variable*,
        bav_symbol*)
    bav_Iorder bav_total_order_variable (bav_variable*)
    bool bav_is_constant_variable (
        bav_variable*,
        bav_symbol*,
        bav_tableof_parameter*)
    bav_variable* bav_diff_variable (
        bav_variable*,
        bav_symbol*)
    bav_variable* bav_diff2_variable (
        bav_variable*,
        bav_term*)
    bav_variable* bav_int_variable (
        bav_variable*,
        bav_symbol*)
    bav_typeof_symbol bav_symbol_type_variable (bav_variable*)
    bav_variable* bav_order_zero_variable (bav_variable*)
    bav_variable* bav_lcd_variable (
        bav_variable*,
        bav_variable*)
    bool bav_disjoint_variables (
        bav_variable*,
        bav_variable*)
    bool bav_is_derivative (
        bav_variable*,
        bav_variable*)
    bool bav_is_proper_derivative (
        bav_variable*,
        bav_variable*)
    bool bav_is_d_derivative (
        bav_variable*,
        bav_variable*,
        bav_symbol*)
    bool bav_is_derivative2 (
        bav_variable*,
        bav_tableof_variable*)
    bav_variable* bav_derivation_between_derivatives (
        bav_variable*,
        bav_variable*)
    void bav_operator_between_derivatives (
        bav_term*,
        bav_variable*,
        bav_variable*)
    bav_variable* bav_next_derivative (
        bav_variable*,
        bav_tableof_variable*)
    ba0_mint_hp bav_random_eval_variable_to_mint_hp (bav_variable*)
    void bav_sort_tableof_just_created_variable (bav_tableof_variable*)
    void bav_sort_tableof_variable (
        bav_tableof_variable*,
        ba0_sort_mode)
    void bav_independent_variables (bav_tableof_variable*)
    struct bav_differential_ring:
        pass
    bav_variable* bav_switch_ring_variable (
        bav_variable*,
        bav_differential_ring*)
    struct bav_subranking:
        char* ident
        bool (*inf) (
            bav_variable*,
            bav_variable*,
            ba0_int_p,
            ba0_int_p,
            bav_tableof_symbol*)
    bool bav_is_subranking (
        char*,
        ba0_int_p*)
    struct bav_block:
        ba0_int_p subr
        ba0_tableof_int_p indices
        ba0_tableof_string strs
    struct bav_tableof_block:
        ba0_int_p alloc
        ba0_int_p size
        bav_block** tab
    void bav_init_block (bav_block*)
    void bav_reset_block (bav_block*)
    bav_block* bav_new_block ()
    bool bav_is_empty_block (bav_block*)
    struct bav_ordering:
        bav_tableof_symbol ders
        bav_tableof_block blocks
        bav_block operator_block
        bav_tableof_variable varmax
    struct bav_tableof_ordering:
        ba0_int_p alloc
        ba0_int_p size
        bav_ordering** tab
    void bav_set_settings_ordering (char*)
    void bav_get_settings_ordering (char**)
    void bav_init_ordering (bav_ordering*)
    void bav_reset_ordering (bav_ordering*)
    bav_ordering* bav_new_ordering ()
    void bav_set_ordering (
        bav_ordering*,
        bav_ordering*)
    struct bav_differential_ring:
        bool empty
        ba0_tableof_string strs
        bav_tableof_symbol syms
        bav_tableof_variable vars
        ba0_tableof_int_p ders
        ba0_tableof_int_p deps
        ba0_tableof_int_p tmps
        ba0_tableof_int_p tmps_in_use
        ba0_int_p opra
        bav_tableof_ordering ords
        bav_tableof_Iordering ord_stack
    void bav_init_differential_ring (bav_differential_ring*)
    bav_differential_ring* bav_new_differential_ring ()
    ba0_int_p bav_sizeof_differential_ring (bav_differential_ring*)
    void bav_set_differential_ring (
        bav_differential_ring*,
        bav_differential_ring*)
    void bav_R_init ()
    bool bav_R_is_empty ()
    void bav_R_create (
        ba0_tableof_string*,
        bav_tableof_block*,
        bav_block*)
    bav_Iordering bav_R_new_ranking (
        ba0_tableof_string*,
        bav_tableof_block*,
        bav_block*)
    bav_Iordering bav_R_copy_ordering (bav_Iordering)
    bav_variable* bav_R_new_temporary_variable ()
    bool bav_R_ambiguous_symbols ()
    void bav_R_free_temporary_variable (bav_variable*)
    void bav_R_set_maximal_variable (bav_variable*)
    void bav_R_swap_ordering (
        bav_Iordering,
        bav_Iordering)
    void bav_R_free_ordering (bav_Iordering)
    void bav_R_push_ordering (bav_Iordering)
    void bav_R_pull_ordering ()
    bool bav_exists_ordering (bav_Iordering)
    bav_Iordering bav_R_Iordering ()
    bav_ordering* bav_R_ordering ()
    bav_Inumber bav_R_variable_number (bav_variable*)
    bav_Inumber bav_R_symbol_block_number (
        bav_symbol*,
        ba0_int_p*)
    bav_variable* bav_R_derivative (
        bav_variable*,
        bav_symbol*)
    bav_variable* bav_R_symbol_to_variable (bav_symbol*)
    bav_symbol* bav_R_string_to_symbol (char*)
    bav_symbol* bav_R_string_to_derivation (char*)
    bav_variable* bav_R_string_to_variable (char*)
    bav_variable* bav_R_derivation_index_to_derivation (ba0_int_p)
    void bav_R_mark_variables (ba0_int_p)
    void bav_R_marked_variables (
        bav_tableof_variable*,
        ba0_int_p)
    struct bav_value_int_p:
        bav_variable* var
        ba0_int_p value
    struct bav_point_int_p:
        ba0_int_p alloc
        ba0_int_p size
        bav_value_int_p** tab
    struct bav_value_interval_mpq:
        bav_variable* var
        ba0_interval_mpq* value
    struct bav_tableof_value_interval_mpq:
        ba0_int_p alloc
        ba0_int_p size
        bav_value_interval_mpq** tab
    struct bav_point_interval_mpq:
        ba0_int_p alloc
        ba0_int_p size
        bav_value_interval_mpq** tab
    struct bav_tableof_point_interval_mpq:
        ba0_int_p alloc
        ba0_int_p size
        bav_point_interval_mpq** tab
    bav_value_interval_mpq* bav_new_value_interval_mpq ()
    void bav_set_value_interval_mpq (
        bav_value_interval_mpq*,
        bav_value_interval_mpq*)
    void bav_init_point_interval_mpq (bav_point_interval_mpq*)
    bav_point_interval_mpq* bav_new_point_interval_mpq ()
    void bav_realloc_point_interval_mpq (
        bav_point_interval_mpq*,
        ba0_int_p)
    void bav_set_point_interval_mpq (
        bav_point_interval_mpq*,
        bav_point_interval_mpq*)
    void bav_set_coord_point_interval_mpq (
        bav_point_interval_mpq*,
        bav_variable*,
        ba0_interval_mpq*)
    void bav_intersect_coord_point_interval_mpq (
        bav_point_interval_mpq*,
        bav_point_interval_mpq*,
        bav_variable*,
        ba0_interval_mpq*)
    void bav_intersect_point_interval_mpq (
        bav_point_interval_mpq*,
        bav_point_interval_mpq*,
        bav_point_interval_mpq*)
    bool bav_is_empty_point_interval_mpq (bav_point_interval_mpq*)
    void bav_bisect_point_interval_mpq (
        bav_tableof_point_interval_mpq*,
        bav_point_interval_mpq*,
        ba0_int_p)
    void bav_set_tableof_point_interval_mpq (
        bav_tableof_point_interval_mpq*,
        bav_tableof_point_interval_mpq*)
    struct bav_rank:
        bav_variable* var
        bav_Idegree deg
    void bav_init_rank (bav_rank*)
    bav_rank* bav_new_rank ()
    bool bav_is_zero_rank (bav_rank*)
    bool bav_is_constant_rank (bav_rank*)
    bool bav_lt_rank (
        bav_rank*,
        bav_rank*)
    bool bav_gt_rank (
        bav_rank*,
        bav_rank*)
    bool bav_equal_rank (
        bav_rank*,
        bav_rank*)
    int bav_inv_comp_rank (
        void*,
        void*)
    bav_rank bav_zero_rank ()
    bav_rank bav_constant_rank ()
    bav_rank bav_constant_rank2 (bav_variable*)
    void bav_set_settings_rank (ba0_printf_function*)
    void bav_get_settings_rank (ba0_printf_function**)
    struct bav_tableof_rank:
        ba0_int_p alloc
        ba0_int_p size
        bav_rank** tab
    struct bav_term:
        ba0_int_p alloc
        ba0_int_p size
        bav_rank* rg
    struct bav_listof_term:
        bav_term* value
        bav_listof_term* next
    struct bav_tableof_term:
        ba0_int_p alloc
        ba0_int_p size
        bav_term** tab
    void bav_realloc_term (
        bav_term*,
        ba0_int_p)
    void bav_init_term (bav_term*)
    bav_term* bav_new_term ()
    void bav_set_term_one (bav_term*)
    void bav_set_term_variable (
        bav_term*,
        bav_variable*,
        bav_Idegree)
    void bav_set_term_rank (
        bav_term*,
        bav_rank*)
    void bav_set_term (
        bav_term*,
        bav_term*)
    void bav_shift_term (
        bav_term*,
        bav_term*)
    void bav_strip_term (
        bav_term*,
        bav_term*,
        bav_Inumber)
    bool bav_is_one_term (bav_term*)
    bav_variable* bav_leader_term (bav_term*)
    bav_Idegree bav_leading_degree_term (bav_term*)
    bav_Idegree bav_total_degree_term (bav_term*)
    bav_Idegree bav_degree_term (
        bav_term*,
        bav_variable*)
    bav_Iorder bav_total_order_term (bav_term*)
    bav_Idegree bav_maximal_degree_term (bav_term*)
    bav_rank bav_rank_term (bav_term*)
    bool bav_disjoint_term (
        bav_term*,
        bav_term*)
    bool bav_equal_term (
        bav_term*,
        bav_term*)
    bool bav_gt_term (
        bav_term*,
        bav_term*)
    bool bav_lt_term (
        bav_term*,
        bav_term*)
    void bav_sort_term (bav_term*)
    void bav_lcm_term (
        bav_term*,
        bav_term*,
        bav_term*)
    void bav_gcd_term (
        bav_term*,
        bav_term*,
        bav_term*)
    void bav_mul_term (
        bav_term*,
        bav_term*,
        bav_term*)
    void bav_mul_term_rank (
        bav_term*,
        bav_term*,
        bav_rank*)
    void bav_mul_term_variable (
        bav_term*,
        bav_term*,
        bav_variable*,
        bav_Idegree)
    void bav_pow_term (
        bav_term*,
        bav_term*,
        bav_Idegree)
    void bav_exquo_term (
        bav_term*,
        bav_term*,
        bav_term*)
    void bav_exquo_term_variable (
        bav_term*,
        bav_term*,
        bav_variable*,
        bav_Idegree)
    bool bav_is_factor_term (
        bav_term*,
        bav_term*,
        bav_term*)
    void bav_diff_term (
        bav_term*,
        bav_term*,
        bav_symbol*,
        bav_tableof_variable*)
    void bav_marked_ranks_term (bav_term*)
    void bav_term_at_point_int_p (
        ba0_mpz_t,
        bav_term*,
        bav_point_int_p*)
    void bav_term_at_point_interval_mpq (
        ba0_interval_mpq*, 
        bav_term*, 
        bav_point_interval_mpq*)
    struct bav_differential_ring:
        pass
    void bav_switch_ring_term (
        bav_term*,
        bav_differential_ring*)
    bool bav_depends_on_zero_derivatives_of_parameter_term (
        bav_term*,
        bav_tableof_parameter*)
    ctypedef ba0_int_p bav_hash_code
    struct bav_htableof_term:
         pass
    void bav_init_htableof_term (bav_htableof_term*)
    void bav_reset_htableof_term (bav_htableof_term*)
    void bav_clear_htableof_term (bav_htableof_term*)
    ba0_int_p bav_nbelem_htableof_term (bav_htableof_term*)
    void bav_resize_htableof_term (
        bav_htableof_term*,
        ba0_int_p)
    bav_hash_code bav_hash_term (bav_term*)
    void bav_unhash_term (
        bav_term*,
        bav_hash_code)
    ba0_compare_code bav_compare_term (
        bav_term*,
        bav_term*)
    ba0_compare_code bav_compare_stripped_term (
        bav_term*,
        bav_term*,
        bav_Inumber)
    struct bav_global:
         pass
    struct bav_initialized_global:
         pass
    struct bap_composite_number:
         pass
    void bap_reset_all_settings ()
    void bap_restart (
        ba0_int_p,
        ba0_int_p)
    void bap_terminate (ba0_restart_level)
    ba0_int_p bap_ceil_log2 (ba0_int_p)
    ctypedef ba0_int_p bap_termkey
    enum bap_typeof_termanager:
        bap_basic_termanager
        bap_zipping_termanager
        bap_hashing_termanager
    struct bap_termanager:
         pass
    void bap_init_termanager (
        bap_termanager*,
        bap_typeof_termanager,
        bav_term*)
    void bap_reset_termanager (
        bap_termanager*,
        bap_typeof_termanager,
        bav_term*,
        bool*)
    bool bap_equal_termanager (
        bap_termanager*,
        bap_termanager*)
    void bap_init_set_termanager (
        bap_termanager*,
        bap_termanager*)
    void bap_init_termkey_array_termanager (
        bap_termanager*,
        bap_termkey*,
        ba0_int_p)
    void bap_set_termkey_from_termkey_termanager (
        bap_termanager*,
        bap_termkey*,
        bap_termanager*,
        bap_termkey)
    void bap_set_termkey_from_term_termanager (
        bap_termanager*,
        bap_termkey*,
        bav_term*)
    void bap_set_term_from_termkey_termanager (
        bap_termanager*,
        bav_term*,
        bap_termkey)
    bool bap_worth_garbage_termkey_termanager (bap_termanager*)
    ba0_int_p bap_garbage1_termkey_termanager (
        bap_termanager*,
        bap_termkey,
        ba0_garbage_code)
    bap_termkey bap_garbage2_termkey_termanager (
        bap_termanager*,
        bap_termkey,
        ba0_garbage_code)
    void bap_switch_ring_termanager (
        bap_termanager*,
        bav_differential_ring*)
    enum bap_typeof_monom_sequence:
        bap_increasing_monom_sequence
        bap_decreasing_monom_sequence
        bap_random_monom_sequence
    struct bap_clot_parameters:
        bap_typeof_termanager type
        bap_typeof_monom_sequence sens
    void bap_reset_clot_parameters_stack ()
    void bap_push_clot_parameters_stack (
        bap_typeof_termanager,
        bap_typeof_monom_sequence)
    void bap_pull_clot_parameters_stack ()
    bap_typeof_termanager bap_current_typeof_termanager ()
    bap_typeof_monom_sequence bap_current_typeof_monom_sequence ()
    struct bap_mont_mpz:
        ba0_int_p alloc
        ba0_int_p size
        bap_termkey* tclef
        ba0_mpz_t* coeff
    struct bap_tableof_mont_mpz:
        ba0_int_p alloc
        ba0_int_p size
        bap_mont_mpz** tab
    struct bap_clot_mpz:
        ba0_int_p alloc
        ba0_int_p size
        bap_termanager tgest
        bap_tableof_mont_mpz tab_mont
        bav_Iordering ordering
        bap_typeof_monom_sequence sens
    bap_clot_mpz* bap_new_clot_mpz (bav_term*)
    void bap_set_clot_zero_mpz (bap_clot_mpz*)
    bool bap_is_zero_clot_mpz (bap_clot_mpz*)
    void bap_reverse_clot_mpz (bap_clot_mpz*)
    void bap_sort_clot_mpz (
        bap_clot_mpz*,
        ba0_int_p,
        ba0_int_p)
    void bap_change_ordering_clot_mpz (
        bap_clot_mpz*,
        bav_Iordering)
    struct bap_itermon_clot_mpz:
        bap_clot_mpz* clot
        bap_composite_number num
    void bap_begin_itermon_clot_mpz (
        bap_itermon_clot_mpz*,
        bap_clot_mpz*)
    void bap_end_itermon_clot_mpz (
        bap_itermon_clot_mpz*,
        bap_clot_mpz*)
    bool bap_outof_itermon_clot_mpz (bap_itermon_clot_mpz*)
    void bap_next_itermon_clot_mpz (bap_itermon_clot_mpz*)
    void bap_prev_itermon_clot_mpz (bap_itermon_clot_mpz*)
    void bap_goto_itermon_clot_mpz (
        bap_itermon_clot_mpz*,
        ba0_int_p)
    ba0_int_p bap_number_itermon_clot_mpz (bap_itermon_clot_mpz*)
    void bap_term_itermon_clot_mpz (
        bav_term*,
        bap_itermon_clot_mpz*)
    ba0_mpz_t* bap_coeff_itermon_clot_mpz (bap_itermon_clot_mpz*)
    void bap_swap_itermon_clot_mpz (
        bap_itermon_clot_mpz*,
        bap_itermon_clot_mpz*)
    struct bap_creator_clot_mpz:
        bap_itermon_clot_mpz iter
        ba0_int_p nbmon_par_mont
    void bap_begin_creator_clot_mpz (
        bap_creator_clot_mpz*,
        bap_clot_mpz*,
        bav_term*,
        ba0_int_p)
    void bap_append_creator_clot_mpz (
        bap_creator_clot_mpz*,
        bap_clot_mpz*,
        ba0_int_p)
    void bap_write_creator_clot_mpz (
        bap_creator_clot_mpz*,
        bav_term*,
        ba0_mpz_t)
    void bap_write_neg_creator_clot_mpz (
        bap_creator_clot_mpz*,
        bav_term*,
        ba0_mpz_t)
    void bap_write_term_creator_clot_mpz (
        bap_creator_clot_mpz*,
        bav_term*)
    void bap_write_all_creator_clot_mpz (
        bap_creator_clot_mpz*,
        bap_clot_mpz*,
        ba0_int_p,
        ba0_int_p)
    void bap_write_neg_all_creator_clot_mpz (
        bap_creator_clot_mpz*,
        bap_clot_mpz*,
        ba0_int_p,
        ba0_int_p)
    void bap_write_mul_all_creator_clot_mpz (
        bap_creator_clot_mpz*,
        bap_clot_mpz*,
        ba0_mpz_t,
        ba0_int_p,
        ba0_int_p)
    void bap_write_exquo_all_creator_clot_mpz (
        bap_creator_clot_mpz*,
        bap_clot_mpz*,
        ba0_mpz_t,
        ba0_int_p,
        ba0_int_p)
    void bap_close_creator_clot_mpz (bap_creator_clot_mpz*)
    void bap_goto_creator_clot_mpz (
        bap_creator_clot_mpz*,
        ba0_int_p)
    void bap_switch_ring_clot_mpz (
        bap_clot_mpz*,
        bav_differential_ring*)
    struct bap_mont_mpzm:
        ba0_int_p alloc
        ba0_int_p size
        bap_termkey* tclef
        ba0_mpzm_t* coeff
    struct bap_tableof_mont_mpzm:
        ba0_int_p alloc
        ba0_int_p size
        bap_mont_mpzm** tab
    struct bap_clot_mpzm:
        ba0_int_p alloc
        ba0_int_p size
        bap_termanager tgest
        bap_tableof_mont_mpzm tab_mont
        bav_Iordering ordering
        bap_typeof_monom_sequence sens
    bap_clot_mpzm* bap_new_clot_mpzm (bav_term*)
    void bap_set_clot_zero_mpzm (bap_clot_mpzm*)
    bool bap_is_zero_clot_mpzm (bap_clot_mpzm*)
    void bap_reverse_clot_mpzm (bap_clot_mpzm*)
    void bap_sort_clot_mpzm (
        bap_clot_mpzm*,
        ba0_int_p,
        ba0_int_p)
    void bap_change_ordering_clot_mpzm (
        bap_clot_mpzm*,
        bav_Iordering)
    struct bap_itermon_clot_mpzm:
        bap_clot_mpzm* clot
        bap_composite_number num
    void bap_begin_itermon_clot_mpzm (
        bap_itermon_clot_mpzm*,
        bap_clot_mpzm*)
    void bap_end_itermon_clot_mpzm (
        bap_itermon_clot_mpzm*,
        bap_clot_mpzm*)
    bool bap_outof_itermon_clot_mpzm (bap_itermon_clot_mpzm*)
    void bap_next_itermon_clot_mpzm (bap_itermon_clot_mpzm*)
    void bap_prev_itermon_clot_mpzm (bap_itermon_clot_mpzm*)
    void bap_goto_itermon_clot_mpzm (
        bap_itermon_clot_mpzm*,
        ba0_int_p)
    ba0_int_p bap_number_itermon_clot_mpzm (bap_itermon_clot_mpzm*)
    void bap_term_itermon_clot_mpzm (
        bav_term*,
        bap_itermon_clot_mpzm*)
    ba0_mpzm_t* bap_coeff_itermon_clot_mpzm (bap_itermon_clot_mpzm*)
    void bap_swap_itermon_clot_mpzm (
        bap_itermon_clot_mpzm*,
        bap_itermon_clot_mpzm*)
    struct bap_creator_clot_mpzm:
        bap_itermon_clot_mpzm iter
        ba0_int_p nbmon_par_mont
    void bap_begin_creator_clot_mpzm (
        bap_creator_clot_mpzm*,
        bap_clot_mpzm*,
        bav_term*,
        ba0_int_p)
    void bap_append_creator_clot_mpzm (
        bap_creator_clot_mpzm*,
        bap_clot_mpzm*,
        ba0_int_p)
    void bap_write_creator_clot_mpzm (
        bap_creator_clot_mpzm*,
        bav_term*,
        ba0_mpzm_t)
    void bap_write_neg_creator_clot_mpzm (
        bap_creator_clot_mpzm*,
        bav_term*,
        ba0_mpzm_t)
    void bap_write_term_creator_clot_mpzm (
        bap_creator_clot_mpzm*,
        bav_term*)
    void bap_write_all_creator_clot_mpzm (
        bap_creator_clot_mpzm*,
        bap_clot_mpzm*,
        ba0_int_p,
        ba0_int_p)
    void bap_write_neg_all_creator_clot_mpzm (
        bap_creator_clot_mpzm*,
        bap_clot_mpzm*,
        ba0_int_p,
        ba0_int_p)
    void bap_write_mul_all_creator_clot_mpzm (
        bap_creator_clot_mpzm*,
        bap_clot_mpzm*,
        ba0_mpzm_t,
        ba0_int_p,
        ba0_int_p)
    void bap_write_exquo_all_creator_clot_mpzm (
        bap_creator_clot_mpzm*,
        bap_clot_mpzm*,
        ba0_mpzm_t,
        ba0_int_p,
        ba0_int_p)
    void bap_close_creator_clot_mpzm (bap_creator_clot_mpzm*)
    void bap_goto_creator_clot_mpzm (
        bap_creator_clot_mpzm*,
        ba0_int_p)
    void bap_switch_ring_clot_mpzm (
        bap_clot_mpzm*,
        bav_differential_ring*)
    struct bap_mont_mpq:
        ba0_int_p alloc
        ba0_int_p size
        bap_termkey* tclef
        ba0_mpq_t* coeff
    struct bap_tableof_mont_mpq:
        ba0_int_p alloc
        ba0_int_p size
        bap_mont_mpq** tab
    struct bap_clot_mpq:
        ba0_int_p alloc
        ba0_int_p size
        bap_termanager tgest
        bap_tableof_mont_mpq tab_mont
        bav_Iordering ordering
        bap_typeof_monom_sequence sens
    bap_clot_mpq* bap_new_clot_mpq (bav_term*)
    void bap_set_clot_zero_mpq (bap_clot_mpq*)
    bool bap_is_zero_clot_mpq (bap_clot_mpq*)
    void bap_reverse_clot_mpq (bap_clot_mpq*)
    void bap_sort_clot_mpq (
        bap_clot_mpq*,
        ba0_int_p,
        ba0_int_p)
    void bap_change_ordering_clot_mpq (
        bap_clot_mpq*,
        bav_Iordering)
    struct bap_itermon_clot_mpq:
        bap_clot_mpq* clot
        bap_composite_number num
    void bap_begin_itermon_clot_mpq (
        bap_itermon_clot_mpq*,
        bap_clot_mpq*)
    void bap_end_itermon_clot_mpq (
        bap_itermon_clot_mpq*,
        bap_clot_mpq*)
    bool bap_outof_itermon_clot_mpq (bap_itermon_clot_mpq*)
    void bap_next_itermon_clot_mpq (bap_itermon_clot_mpq*)
    void bap_prev_itermon_clot_mpq (bap_itermon_clot_mpq*)
    void bap_goto_itermon_clot_mpq (
        bap_itermon_clot_mpq*,
        ba0_int_p)
    ba0_int_p bap_number_itermon_clot_mpq (bap_itermon_clot_mpq*)
    void bap_term_itermon_clot_mpq (
        bav_term*,
        bap_itermon_clot_mpq*)
    ba0_mpq_t* bap_coeff_itermon_clot_mpq (bap_itermon_clot_mpq*)
    void bap_swap_itermon_clot_mpq (
        bap_itermon_clot_mpq*,
        bap_itermon_clot_mpq*)
    struct bap_creator_clot_mpq:
        bap_itermon_clot_mpq iter
        ba0_int_p nbmon_par_mont
    void bap_begin_creator_clot_mpq (
        bap_creator_clot_mpq*,
        bap_clot_mpq*,
        bav_term*,
        ba0_int_p)
    void bap_append_creator_clot_mpq (
        bap_creator_clot_mpq*,
        bap_clot_mpq*,
        ba0_int_p)
    void bap_write_creator_clot_mpq (
        bap_creator_clot_mpq*,
        bav_term*,
        ba0_mpq_t)
    void bap_write_neg_creator_clot_mpq (
        bap_creator_clot_mpq*,
        bav_term*,
        ba0_mpq_t)
    void bap_write_term_creator_clot_mpq (
        bap_creator_clot_mpq*,
        bav_term*)
    void bap_write_all_creator_clot_mpq (
        bap_creator_clot_mpq*,
        bap_clot_mpq*,
        ba0_int_p,
        ba0_int_p)
    void bap_write_neg_all_creator_clot_mpq (
        bap_creator_clot_mpq*,
        bap_clot_mpq*,
        ba0_int_p,
        ba0_int_p)
    void bap_write_mul_all_creator_clot_mpq (
        bap_creator_clot_mpq*,
        bap_clot_mpq*,
        ba0_mpq_t,
        ba0_int_p,
        ba0_int_p)
    void bap_write_exquo_all_creator_clot_mpq (
        bap_creator_clot_mpq*,
        bap_clot_mpq*,
        ba0_mpq_t,
        ba0_int_p,
        ba0_int_p)
    void bap_close_creator_clot_mpq (bap_creator_clot_mpq*)
    void bap_goto_creator_clot_mpq (
        bap_creator_clot_mpq*,
        ba0_int_p)
    void bap_switch_ring_clot_mpq (
        bap_clot_mpq*,
        bav_differential_ring*)
    struct bap_mont_mint_hp:
        ba0_int_p alloc
        ba0_int_p size
        bap_termkey* tclef
        ba0_mint_hp_t* coeff
    struct bap_tableof_mont_mint_hp:
        ba0_int_p alloc
        ba0_int_p size
        bap_mont_mint_hp** tab
    struct bap_clot_mint_hp:
        ba0_int_p alloc
        ba0_int_p size
        bap_termanager tgest
        bap_tableof_mont_mint_hp tab_mont
        bav_Iordering ordering
        bap_typeof_monom_sequence sens
    bap_clot_mint_hp* bap_new_clot_mint_hp (bav_term*)
    void bap_set_clot_zero_mint_hp (bap_clot_mint_hp*)
    bool bap_is_zero_clot_mint_hp (bap_clot_mint_hp*)
    void bap_reverse_clot_mint_hp (bap_clot_mint_hp*)
    void bap_sort_clot_mint_hp (
        bap_clot_mint_hp*,
        ba0_int_p,
        ba0_int_p)
    void bap_change_ordering_clot_mint_hp (
        bap_clot_mint_hp*,
        bav_Iordering)
    struct bap_itermon_clot_mint_hp:
        bap_clot_mint_hp* clot
        bap_composite_number num
    void bap_begin_itermon_clot_mint_hp (
        bap_itermon_clot_mint_hp*,
        bap_clot_mint_hp*)
    void bap_end_itermon_clot_mint_hp (
        bap_itermon_clot_mint_hp*,
        bap_clot_mint_hp*)
    bool bap_outof_itermon_clot_mint_hp (bap_itermon_clot_mint_hp*)
    void bap_next_itermon_clot_mint_hp (bap_itermon_clot_mint_hp*)
    void bap_prev_itermon_clot_mint_hp (bap_itermon_clot_mint_hp*)
    void bap_goto_itermon_clot_mint_hp (
        bap_itermon_clot_mint_hp*,
        ba0_int_p)
    ba0_int_p bap_number_itermon_clot_mint_hp (bap_itermon_clot_mint_hp*)
    void bap_term_itermon_clot_mint_hp (
        bav_term*,
        bap_itermon_clot_mint_hp*)
    ba0_mint_hp_t* bap_coeff_itermon_clot_mint_hp (bap_itermon_clot_mint_hp*)
    void bap_swap_itermon_clot_mint_hp (
        bap_itermon_clot_mint_hp*,
        bap_itermon_clot_mint_hp*)
    struct bap_creator_clot_mint_hp:
        bap_itermon_clot_mint_hp iter
        ba0_int_p nbmon_par_mont
    void bap_begin_creator_clot_mint_hp (
        bap_creator_clot_mint_hp*,
        bap_clot_mint_hp*,
        bav_term*,
        ba0_int_p)
    void bap_append_creator_clot_mint_hp (
        bap_creator_clot_mint_hp*,
        bap_clot_mint_hp*,
        ba0_int_p)
    void bap_write_creator_clot_mint_hp (
        bap_creator_clot_mint_hp*,
        bav_term*,
        ba0_mint_hp_t)
    void bap_write_neg_creator_clot_mint_hp (
        bap_creator_clot_mint_hp*,
        bav_term*,
        ba0_mint_hp_t)
    void bap_write_term_creator_clot_mint_hp (
        bap_creator_clot_mint_hp*,
        bav_term*)
    void bap_write_all_creator_clot_mint_hp (
        bap_creator_clot_mint_hp*,
        bap_clot_mint_hp*,
        ba0_int_p,
        ba0_int_p)
    void bap_write_neg_all_creator_clot_mint_hp (
        bap_creator_clot_mint_hp*,
        bap_clot_mint_hp*,
        ba0_int_p,
        ba0_int_p)
    void bap_write_mul_all_creator_clot_mint_hp (
        bap_creator_clot_mint_hp*,
        bap_clot_mint_hp*,
        ba0_mint_hp_t,
        ba0_int_p,
        ba0_int_p)
    void bap_write_exquo_all_creator_clot_mint_hp (
        bap_creator_clot_mint_hp*,
        bap_clot_mint_hp*,
        ba0_mint_hp_t,
        ba0_int_p,
        ba0_int_p)
    void bap_close_creator_clot_mint_hp (bap_creator_clot_mint_hp*)
    void bap_goto_creator_clot_mint_hp (
        bap_creator_clot_mint_hp*,
        ba0_int_p)
    void bap_switch_ring_clot_mint_hp (
        bap_clot_mint_hp*,
        bav_differential_ring*)
    struct bap_selection:
         pass
    void bap_init_selection (
        bap_selection*,
        bav_variable*,
        bav_Iordering)
    void bap_set_selection (
        bap_selection*,
        bap_selection*)
    bav_Iordering bap_ordering_selection (bap_selection*)
    bav_variable* bap_variable_selection (bap_selection*)
    void bap_change_ordering_selection (
        bap_selection*,
        bav_Iordering)
    void bap_change_variable_selection (
        bap_selection*,
        bav_variable*)
    void bap_push_selection (
        bap_selection*,
        bav_variable*,
        bav_Iordering)
    void bap_pull_selection (bap_selection*)
    bool bap_identity_selection (
        bap_selection*,
        bav_Iordering)
    void bap_term_selection (
        bav_term*,
        bav_Iordering,
        bap_selection*)
    void bap_switch_ring_selection (
        bap_selection*,
        bav_differential_ring*)
    struct bap_sequential_access:
        ba0_int_p first
        ba0_int_p after
    struct bap_indexed_access:
        ba0_int_p alloc
        ba0_int_p size
        ba0_tableof_tableof_int_p tab_index
    void bap_init_indexed_access (bap_indexed_access*)
    void bap_realloc_indexed_access (
        bap_indexed_access*,
        ba0_int_p)
    void bap_reverse_indexed_access (bap_indexed_access*)
    struct bap_iterator_index:
        bap_indexed_access* ind
        bap_composite_number num
    struct bap_creator_index:
        bap_indexed_access* ind
        bap_composite_number num
    void bap_begin_creator_index (
        bap_creator_index*,
        bap_indexed_access*)
    void bap_write_creator_index (
        bap_creator_index*,
        ba0_int_p)
    void bap_close_creator_index (bap_creator_index*)
    void bap_begin_iterator_index (
        bap_iterator_index*,
        bap_indexed_access*)
    void bap_end_iterator_index (
        bap_iterator_index*,
        bap_indexed_access*)
    bool bap_outof_iterator_index (bap_iterator_index*)
    void bap_next_iterator_index (bap_iterator_index*)
    void bap_prev_iterator_index (bap_iterator_index*)
    void bap_goto_iterator_index (
        bap_iterator_index*,
        ba0_int_p)
    ba0_int_p bap_index_iterator_index (bap_iterator_index*)
    ba0_int_p bap_read_iterator_index (bap_iterator_index*)
    void bap_swapindex_iterator_index (
        bap_iterator_index*,
        bap_iterator_index*)
    void bap_set_iterator_index (
        bap_iterator_index*,
        bap_iterator_index*)
    enum bap_typeof_monom_access:
        bap_sequential_monom_access
        bap_indexed_monom_access
    enum bap_typeof_transform:
        bap_definitive_transform
        bap_invertible_transform
        bap_inverse_transform
        bap_formal_transform
    struct bap_polynom_mpz:
        bap_clot_mpz* clot
        bav_term rang_total
        bool readonly
        bap_typeof_monom_access acces
        bap_sequential_access seq
        bap_indexed_access ind
        bap_selection select
    struct bap_tableof_polynom_mpz:
        ba0_int_p alloc
        ba0_int_p size
        bap_polynom_mpz** tab
    struct bap_listof_polynom_mpz:
        bap_polynom_mpz* value
        bap_listof_polynom_mpz* next
    struct bap_tableof_tableof_polynom_mpz:
        ba0_int_p alloc
        ba0_int_p size
        bap_tableof_polynom_mpz** tab
    void bap_init_polynom_mpz (bap_polynom_mpz*)
    void bap_init_readonly_polynom_mpz (bap_polynom_mpz*)
    void bap_init_polynom_one_mpz (bap_polynom_mpz*)
    void bap_init_polynom_crk_mpz (
        bap_polynom_mpz*,
        ba0_mpz_t,
        bav_rank*)
    void bap_set_ordering_polynom_mpz (
        bap_polynom_mpz*,
        bav_Iordering)
    void bap_set_ordering_polynom_and_clot_mpz (
        bap_polynom_mpz*,
        bav_Iordering)
    bap_polynom_mpz* bap_new_polynom_mpz ()
    bap_polynom_mpz* bap_new_readonly_polynom_mpz ()
    bap_polynom_mpz* bap_new_polynom_one_mpz ()
    bap_polynom_mpz* bap_new_polynom_crk_mpz (
        ba0_mpz_t,
        bav_rank*)
    void bap_set_polynom_zero_mpz (bap_polynom_mpz*)
    void bap_set_polynom_one_mpz (bap_polynom_mpz*)
    void bap_set_polynom_crk_mpz (
        bap_polynom_mpz*,
        ba0_mpz_t,
        bav_rank*)
    void bap_set_polynom_variable_mpz (
        bap_polynom_mpz*,
        bav_variable*,
        bav_Idegree)
    void bap_set_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    void bap_set_readonly_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    void bap_set_polynom_term_mpz (
        bap_polynom_mpz*,
        bav_term*)
    void bap_set_polynom_monom_mpz (
        bap_polynom_mpz*,
        ba0_mpz_t,
        bav_term*)
    void bap_set_total_rank_polynom_mpz (bap_polynom_mpz*)
    bool bap_is_zero_polynom_mpz (bap_polynom_mpz*)
    bool bap_is_one_polynom_mpz (bap_polynom_mpz*)
    bool bap_is_numeric_polynom_mpz (bap_polynom_mpz*)
    bool bap_is_independent_polynom_mpz (bap_polynom_mpz*)
    bool bap_is_lhoc_polynom_mpz (bap_polynom_mpz*)
    bool bap_is_univariate_polynom_mpz (bap_polynom_mpz*)
    bool bap_depend_polynom_mpz (
        bap_polynom_mpz*,
        bav_variable*)
    bool bap_depend_only_polynom_mpz (
        bap_polynom_mpz*,
        bav_tableof_variable*)
    bool bap_is_variable_polynom_mpz (bap_polynom_mpz*)
    bool bap_is_solved_polynom_mpz (bap_polynom_mpz*)
    bool bap_is_derivative_minus_independent_polynom_mpz (bap_polynom_mpz*)
    bool bap_is_rank_minus_monom_polynom_mpz (bap_polynom_mpz*)
    bool bap_are_disjoint_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    ba0_compare_code bap_compare_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    bool bap_equal_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    bool bap_equal_rank_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    void bap_reverse_polynom_mpz (bap_polynom_mpz*)
    void bap_mark_indets_polynom_mpz (bap_polynom_mpz*)
    void bap_mark_ranks_polynom_mpz (bap_polynom_mpz*)
    void bap_involved_parameters_polynom_mpz (
        bav_tableof_parameter*,
        bap_polynom_mpz*,
        bav_tableof_parameter*)
    void bap_sort_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    void bap_physort_polynom_mpz (
        bap_polynom_mpz*,
        bap_typeof_transform)
    bap_typeof_monom_sequence bap_monom_sequence_polynom_mpz (bap_polynom_mpz*)
    ba0_int_p bap_nbmon_polynom_mpz (bap_polynom_mpz*)
    void bap_minimal_total_rank_polynom_mpz (
        bav_term*,
        bap_polynom_mpz*)
    void bap_total_rank_polynom_mpz (
        bav_term*,
        bap_polynom_mpz*)
    void bap_leading_term_polynom_mpz (
        bav_term*,
        bap_polynom_mpz*)
    bav_variable* bap_leader_polynom_mpz (bap_polynom_mpz*)
    bav_rank bap_rank_polynom_mpz (bap_polynom_mpz*)
    bav_Idegree bap_leading_degree_polynom_mpz (bap_polynom_mpz*)
    bav_Idegree bap_degree_polynom_mpz (
        bap_polynom_mpz*,
        bav_variable*)
    bav_Idegree bap_total_degree_polynom_mpz (bap_polynom_mpz*)
    bav_Iorder bap_total_order_polynom_mpz (bap_polynom_mpz*)
    ba0_mpz_t* bap_numeric_initial_polynom_mpz (bap_polynom_mpz*)
    void bap_initial_and_reductum_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    void bap_initial_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    void bap_reductum_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    void bap_initial_and_reductum2_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*)
    void bap_initial2_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*)
    void bap_reductum2_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*)
    void bap_coeff2_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*,
        bav_Idegree)
    void bap_lcoeff_and_reductum_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*)
    void bap_lcoeff_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*)
    void bap_coeff_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*,
        bav_Idegree)
    void bap_coeff_and_reductum_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*,
        bav_Idegree)
    void bap_replace_initial_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    bav_Idegree degre_total_mpz (bap_polynom_mpz*)
    void bap_separant_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    void bap_separant2_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*)
    void bap_sort_tableof_polynom_mpz (
        bap_tableof_polynom_mpz*,
        ba0_sort_mode)
    ba0_int_p bap_sizeof_polynom_mpz (bap_polynom_mpz*)
    void bap_switch_ring_polynom_mpz (
        bap_polynom_mpz*,
        bav_differential_ring*)
    struct bap_polynom_mpzm:
        bap_clot_mpzm* clot
        bav_term rang_total
        bool readonly
        bap_typeof_monom_access acces
        bap_sequential_access seq
        bap_indexed_access ind
        bap_selection select
    struct bap_tableof_polynom_mpzm:
        ba0_int_p alloc
        ba0_int_p size
        bap_polynom_mpzm** tab
    struct bap_listof_polynom_mpzm:
        bap_polynom_mpzm* value
        bap_listof_polynom_mpzm* next
    struct bap_tableof_tableof_polynom_mpzm:
        ba0_int_p alloc
        ba0_int_p size
        bap_tableof_polynom_mpzm** tab
    void bap_init_polynom_mpzm (bap_polynom_mpzm*)
    void bap_init_readonly_polynom_mpzm (bap_polynom_mpzm*)
    void bap_init_polynom_one_mpzm (bap_polynom_mpzm*)
    void bap_init_polynom_crk_mpzm (
        bap_polynom_mpzm*,
        ba0_mpzm_t,
        bav_rank*)
    void bap_set_ordering_polynom_mpzm (
        bap_polynom_mpzm*,
        bav_Iordering)
    void bap_set_ordering_polynom_and_clot_mpzm (
        bap_polynom_mpzm*,
        bav_Iordering)
    bap_polynom_mpzm* bap_new_polynom_mpzm ()
    bap_polynom_mpzm* bap_new_readonly_polynom_mpzm ()
    bap_polynom_mpzm* bap_new_polynom_one_mpzm ()
    bap_polynom_mpzm* bap_new_polynom_crk_mpzm (
        ba0_mpzm_t,
        bav_rank*)
    void bap_set_polynom_zero_mpzm (bap_polynom_mpzm*)
    void bap_set_polynom_one_mpzm (bap_polynom_mpzm*)
    void bap_set_polynom_crk_mpzm (
        bap_polynom_mpzm*,
        ba0_mpzm_t,
        bav_rank*)
    void bap_set_polynom_variable_mpzm (
        bap_polynom_mpzm*,
        bav_variable*,
        bav_Idegree)
    void bap_set_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    void bap_set_readonly_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    void bap_set_polynom_term_mpzm (
        bap_polynom_mpzm*,
        bav_term*)
    void bap_set_polynom_monom_mpzm (
        bap_polynom_mpzm*,
        ba0_mpzm_t,
        bav_term*)
    void bap_set_total_rank_polynom_mpzm (bap_polynom_mpzm*)
    bool bap_is_zero_polynom_mpzm (bap_polynom_mpzm*)
    bool bap_is_one_polynom_mpzm (bap_polynom_mpzm*)
    bool bap_is_numeric_polynom_mpzm (bap_polynom_mpzm*)
    bool bap_is_independent_polynom_mpzm (bap_polynom_mpzm*)
    bool bap_is_lhoc_polynom_mpzm (bap_polynom_mpzm*)
    bool bap_is_univariate_polynom_mpzm (bap_polynom_mpzm*)
    bool bap_depend_polynom_mpzm (
        bap_polynom_mpzm*,
        bav_variable*)
    bool bap_depend_only_polynom_mpzm (
        bap_polynom_mpzm*,
        bav_tableof_variable*)
    bool bap_is_variable_polynom_mpzm (bap_polynom_mpzm*)
    bool bap_is_solved_polynom_mpzm (bap_polynom_mpzm*)
    bool bap_is_derivative_minus_independent_polynom_mpzm (bap_polynom_mpzm*)
    bool bap_is_rank_minus_monom_polynom_mpzm (bap_polynom_mpzm*)
    bool bap_are_disjoint_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    ba0_compare_code bap_compare_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    bool bap_equal_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    bool bap_equal_rank_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    void bap_reverse_polynom_mpzm (bap_polynom_mpzm*)
    void bap_mark_indets_polynom_mpzm (bap_polynom_mpzm*)
    void bap_mark_ranks_polynom_mpzm (bap_polynom_mpzm*)
    void bap_involved_parameters_polynom_mpzm (
        bav_tableof_parameter*,
        bap_polynom_mpzm*,
        bav_tableof_parameter*)
    void bap_sort_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    void bap_physort_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_typeof_transform)
    bap_typeof_monom_sequence bap_monom_sequence_polynom_mpzm (bap_polynom_mpzm*)
    ba0_int_p bap_nbmon_polynom_mpzm (bap_polynom_mpzm*)
    void bap_minimal_total_rank_polynom_mpzm (
        bav_term*,
        bap_polynom_mpzm*)
    void bap_total_rank_polynom_mpzm (
        bav_term*,
        bap_polynom_mpzm*)
    void bap_leading_term_polynom_mpzm (
        bav_term*,
        bap_polynom_mpzm*)
    bav_variable* bap_leader_polynom_mpzm (bap_polynom_mpzm*)
    bav_rank bap_rank_polynom_mpzm (bap_polynom_mpzm*)
    bav_Idegree bap_leading_degree_polynom_mpzm (bap_polynom_mpzm*)
    bav_Idegree bap_degree_polynom_mpzm (
        bap_polynom_mpzm*,
        bav_variable*)
    bav_Idegree bap_total_degree_polynom_mpzm (bap_polynom_mpzm*)
    bav_Iorder bap_total_order_polynom_mpzm (bap_polynom_mpzm*)
    ba0_mpzm_t* bap_numeric_initial_polynom_mpzm (bap_polynom_mpzm*)
    void bap_initial_and_reductum_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    void bap_initial_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    void bap_reductum_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    void bap_initial_and_reductum2_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_variable*)
    void bap_initial2_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_variable*)
    void bap_reductum2_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_variable*)
    void bap_coeff2_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_variable*,
        bav_Idegree)
    void bap_lcoeff_and_reductum_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_variable*)
    void bap_lcoeff_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_variable*)
    void bap_coeff_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_variable*,
        bav_Idegree)
    void bap_coeff_and_reductum_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_variable*,
        bav_Idegree)
    void bap_replace_initial_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    bav_Idegree degre_total_mpzm (bap_polynom_mpzm*)
    void bap_separant_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    void bap_separant2_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_variable*)
    void bap_sort_tableof_polynom_mpzm (
        bap_tableof_polynom_mpzm*,
        ba0_sort_mode)
    ba0_int_p bap_sizeof_polynom_mpzm (bap_polynom_mpzm*)
    void bap_switch_ring_polynom_mpzm (
        bap_polynom_mpzm*,
        bav_differential_ring*)
    struct bap_polynom_mpq:
        bap_clot_mpq* clot
        bav_term rang_total
        bool readonly
        bap_typeof_monom_access acces
        bap_sequential_access seq
        bap_indexed_access ind
        bap_selection select
    struct bap_tableof_polynom_mpq:
        ba0_int_p alloc
        ba0_int_p size
        bap_polynom_mpq** tab
    struct bap_listof_polynom_mpq:
        bap_polynom_mpq* value
        bap_listof_polynom_mpq* next
    struct bap_tableof_tableof_polynom_mpq:
        ba0_int_p alloc
        ba0_int_p size
        bap_tableof_polynom_mpq** tab
    void bap_init_polynom_mpq (bap_polynom_mpq*)
    void bap_init_readonly_polynom_mpq (bap_polynom_mpq*)
    void bap_init_polynom_one_mpq (bap_polynom_mpq*)
    void bap_init_polynom_crk_mpq (
        bap_polynom_mpq*,
        ba0_mpq_t,
        bav_rank*)
    void bap_set_ordering_polynom_mpq (
        bap_polynom_mpq*,
        bav_Iordering)
    void bap_set_ordering_polynom_and_clot_mpq (
        bap_polynom_mpq*,
        bav_Iordering)
    bap_polynom_mpq* bap_new_polynom_mpq ()
    bap_polynom_mpq* bap_new_readonly_polynom_mpq ()
    bap_polynom_mpq* bap_new_polynom_one_mpq ()
    bap_polynom_mpq* bap_new_polynom_crk_mpq (
        ba0_mpq_t,
        bav_rank*)
    void bap_set_polynom_zero_mpq (bap_polynom_mpq*)
    void bap_set_polynom_one_mpq (bap_polynom_mpq*)
    void bap_set_polynom_crk_mpq (
        bap_polynom_mpq*,
        ba0_mpq_t,
        bav_rank*)
    void bap_set_polynom_variable_mpq (
        bap_polynom_mpq*,
        bav_variable*,
        bav_Idegree)
    void bap_set_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    void bap_set_readonly_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    void bap_set_polynom_term_mpq (
        bap_polynom_mpq*,
        bav_term*)
    void bap_set_polynom_monom_mpq (
        bap_polynom_mpq*,
        ba0_mpq_t,
        bav_term*)
    void bap_set_total_rank_polynom_mpq (bap_polynom_mpq*)
    bool bap_is_zero_polynom_mpq (bap_polynom_mpq*)
    bool bap_is_one_polynom_mpq (bap_polynom_mpq*)
    bool bap_is_numeric_polynom_mpq (bap_polynom_mpq*)
    bool bap_is_independent_polynom_mpq (bap_polynom_mpq*)
    bool bap_is_lhoc_polynom_mpq (bap_polynom_mpq*)
    bool bap_is_univariate_polynom_mpq (bap_polynom_mpq*)
    bool bap_depend_polynom_mpq (
        bap_polynom_mpq*,
        bav_variable*)
    bool bap_depend_only_polynom_mpq (
        bap_polynom_mpq*,
        bav_tableof_variable*)
    bool bap_is_variable_polynom_mpq (bap_polynom_mpq*)
    bool bap_is_solved_polynom_mpq (bap_polynom_mpq*)
    bool bap_is_derivative_minus_independent_polynom_mpq (bap_polynom_mpq*)
    bool bap_is_rank_minus_monom_polynom_mpq (bap_polynom_mpq*)
    bool bap_are_disjoint_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    ba0_compare_code bap_compare_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    bool bap_equal_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    bool bap_equal_rank_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    void bap_reverse_polynom_mpq (bap_polynom_mpq*)
    void bap_mark_indets_polynom_mpq (bap_polynom_mpq*)
    void bap_mark_ranks_polynom_mpq (bap_polynom_mpq*)
    void bap_involved_parameters_polynom_mpq (
        bav_tableof_parameter*,
        bap_polynom_mpq*,
        bav_tableof_parameter*)
    void bap_sort_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    void bap_physort_polynom_mpq (
        bap_polynom_mpq*,
        bap_typeof_transform)
    bap_typeof_monom_sequence bap_monom_sequence_polynom_mpq (bap_polynom_mpq*)
    ba0_int_p bap_nbmon_polynom_mpq (bap_polynom_mpq*)
    void bap_minimal_total_rank_polynom_mpq (
        bav_term*,
        bap_polynom_mpq*)
    void bap_total_rank_polynom_mpq (
        bav_term*,
        bap_polynom_mpq*)
    void bap_leading_term_polynom_mpq (
        bav_term*,
        bap_polynom_mpq*)
    bav_variable* bap_leader_polynom_mpq (bap_polynom_mpq*)
    bav_rank bap_rank_polynom_mpq (bap_polynom_mpq*)
    bav_Idegree bap_leading_degree_polynom_mpq (bap_polynom_mpq*)
    bav_Idegree bap_degree_polynom_mpq (
        bap_polynom_mpq*,
        bav_variable*)
    bav_Idegree bap_total_degree_polynom_mpq (bap_polynom_mpq*)
    bav_Iorder bap_total_order_polynom_mpq (bap_polynom_mpq*)
    ba0_mpq_t* bap_numeric_initial_polynom_mpq (bap_polynom_mpq*)
    void bap_initial_and_reductum_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    void bap_initial_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    void bap_reductum_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    void bap_initial_and_reductum2_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_variable*)
    void bap_initial2_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_variable*)
    void bap_reductum2_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_variable*)
    void bap_coeff2_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_variable*,
        bav_Idegree)
    void bap_lcoeff_and_reductum_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_variable*)
    void bap_lcoeff_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_variable*)
    void bap_coeff_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_variable*,
        bav_Idegree)
    void bap_coeff_and_reductum_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_variable*,
        bav_Idegree)
    void bap_replace_initial_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    bav_Idegree degre_total_mpq (bap_polynom_mpq*)
    void bap_separant_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    void bap_separant2_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_variable*)
    void bap_sort_tableof_polynom_mpq (
        bap_tableof_polynom_mpq*,
        ba0_sort_mode)
    ba0_int_p bap_sizeof_polynom_mpq (bap_polynom_mpq*)
    void bap_switch_ring_polynom_mpq (
        bap_polynom_mpq*,
        bav_differential_ring*)
    struct bap_polynom_mint_hp:
        bap_clot_mint_hp* clot
        bav_term rang_total
        bool readonly
        bap_typeof_monom_access acces
        bap_sequential_access seq
        bap_indexed_access ind
        bap_selection select
    struct bap_tableof_polynom_mint_hp:
        ba0_int_p alloc
        ba0_int_p size
        bap_polynom_mint_hp** tab
    struct bap_listof_polynom_mint_hp:
        bap_polynom_mint_hp* value
        bap_listof_polynom_mint_hp* next
    struct bap_tableof_tableof_polynom_mint_hp:
        ba0_int_p alloc
        ba0_int_p size
        bap_tableof_polynom_mint_hp** tab
    void bap_init_polynom_mint_hp (bap_polynom_mint_hp*)
    void bap_init_readonly_polynom_mint_hp (bap_polynom_mint_hp*)
    void bap_init_polynom_one_mint_hp (bap_polynom_mint_hp*)
    void bap_init_polynom_crk_mint_hp (
        bap_polynom_mint_hp*,
        ba0_mint_hp_t,
        bav_rank*)
    void bap_set_ordering_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bav_Iordering)
    void bap_set_ordering_polynom_and_clot_mint_hp (
        bap_polynom_mint_hp*,
        bav_Iordering)
    bap_polynom_mint_hp* bap_new_polynom_mint_hp ()
    bap_polynom_mint_hp* bap_new_readonly_polynom_mint_hp ()
    bap_polynom_mint_hp* bap_new_polynom_one_mint_hp ()
    bap_polynom_mint_hp* bap_new_polynom_crk_mint_hp (
        ba0_mint_hp_t,
        bav_rank*)
    void bap_set_polynom_zero_mint_hp (bap_polynom_mint_hp*)
    void bap_set_polynom_one_mint_hp (bap_polynom_mint_hp*)
    void bap_set_polynom_crk_mint_hp (
        bap_polynom_mint_hp*,
        ba0_mint_hp_t,
        bav_rank*)
    void bap_set_polynom_variable_mint_hp (
        bap_polynom_mint_hp*,
        bav_variable*,
        bav_Idegree)
    void bap_set_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_set_readonly_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_set_polynom_term_mint_hp (
        bap_polynom_mint_hp*,
        bav_term*)
    void bap_set_polynom_monom_mint_hp (
        bap_polynom_mint_hp*,
        ba0_mint_hp_t,
        bav_term*)
    void bap_set_total_rank_polynom_mint_hp (bap_polynom_mint_hp*)
    bool bap_is_zero_polynom_mint_hp (bap_polynom_mint_hp*)
    bool bap_is_one_polynom_mint_hp (bap_polynom_mint_hp*)
    bool bap_is_numeric_polynom_mint_hp (bap_polynom_mint_hp*)
    bool bap_is_independent_polynom_mint_hp (bap_polynom_mint_hp*)
    bool bap_is_lhoc_polynom_mint_hp (bap_polynom_mint_hp*)
    bool bap_is_univariate_polynom_mint_hp (bap_polynom_mint_hp*)
    bool bap_depend_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bav_variable*)
    bool bap_depend_only_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bav_tableof_variable*)
    bool bap_is_variable_polynom_mint_hp (bap_polynom_mint_hp*)
    bool bap_is_solved_polynom_mint_hp (bap_polynom_mint_hp*)
    bool bap_is_derivative_minus_independent_polynom_mint_hp (bap_polynom_mint_hp*)
    bool bap_is_rank_minus_monom_polynom_mint_hp (bap_polynom_mint_hp*)
    bool bap_are_disjoint_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    ba0_compare_code bap_compare_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    bool bap_equal_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    bool bap_equal_rank_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_reverse_polynom_mint_hp (bap_polynom_mint_hp*)
    void bap_mark_indets_polynom_mint_hp (bap_polynom_mint_hp*)
    void bap_mark_ranks_polynom_mint_hp (bap_polynom_mint_hp*)
    void bap_involved_parameters_polynom_mint_hp (
        bav_tableof_parameter*,
        bap_polynom_mint_hp*,
        bav_tableof_parameter*)
    void bap_sort_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_physort_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_typeof_transform)
    bap_typeof_monom_sequence bap_monom_sequence_polynom_mint_hp (bap_polynom_mint_hp*)
    ba0_int_p bap_nbmon_polynom_mint_hp (bap_polynom_mint_hp*)
    void bap_minimal_total_rank_polynom_mint_hp (
        bav_term*,
        bap_polynom_mint_hp*)
    void bap_total_rank_polynom_mint_hp (
        bav_term*,
        bap_polynom_mint_hp*)
    void bap_leading_term_polynom_mint_hp (
        bav_term*,
        bap_polynom_mint_hp*)
    bav_variable* bap_leader_polynom_mint_hp (bap_polynom_mint_hp*)
    bav_rank bap_rank_polynom_mint_hp (bap_polynom_mint_hp*)
    bav_Idegree bap_leading_degree_polynom_mint_hp (bap_polynom_mint_hp*)
    bav_Idegree bap_degree_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bav_variable*)
    bav_Idegree bap_total_degree_polynom_mint_hp (bap_polynom_mint_hp*)
    bav_Iorder bap_total_order_polynom_mint_hp (bap_polynom_mint_hp*)
    ba0_mint_hp_t* bap_numeric_initial_polynom_mint_hp (bap_polynom_mint_hp*)
    void bap_initial_and_reductum_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_initial_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_reductum_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_initial_and_reductum2_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_variable*)
    void bap_initial2_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_variable*)
    void bap_reductum2_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_variable*)
    void bap_coeff2_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_variable*,
        bav_Idegree)
    void bap_lcoeff_and_reductum_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_variable*)
    void bap_lcoeff_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_variable*)
    void bap_coeff_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_variable*,
        bav_Idegree)
    void bap_coeff_and_reductum_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_variable*,
        bav_Idegree)
    void bap_replace_initial_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    bav_Idegree degre_total_mint_hp (bap_polynom_mint_hp*)
    void bap_separant_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_separant2_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_variable*)
    void bap_sort_tableof_polynom_mint_hp (
        bap_tableof_polynom_mint_hp*,
        ba0_sort_mode)
    ba0_int_p bap_sizeof_polynom_mint_hp (bap_polynom_mint_hp*)
    void bap_switch_ring_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bav_differential_ring*)
    void bap__check_ordering_mpz (bap_polynom_mpz*)
    void bap__check_compatible_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    void bap__check_ordering_mpzm (bap_polynom_mpzm*)
    void bap__check_compatible_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    void bap__check_ordering_mpq (bap_polynom_mpq*)
    void bap__check_compatible_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    void bap__check_ordering_mint_hp (bap_polynom_mint_hp*)
    void bap__check_compatible_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_add_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    void bap_add_polynom_numeric_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        ba0_mpz_t)
    void bap_sub_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    void bap_submulmon_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_term*,
        ba0_mpz_t)
    void bap_comblin_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        ba0_int_p,
        bap_polynom_mpz*,
        ba0_int_p)
    void bap_addmulrk_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_rank*,
        bap_polynom_mpz*)
    void bap_submulrk_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_rank*,
        bap_polynom_mpz*)
    void bap_add_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    void bap_add_polynom_numeric_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        ba0_mpzm_t)
    void bap_sub_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    void bap_submulmon_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_term*,
        ba0_mpzm_t)
    void bap_comblin_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        ba0_int_p,
        bap_polynom_mpzm*,
        ba0_int_p)
    void bap_addmulrk_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_rank*,
        bap_polynom_mpzm*)
    void bap_submulrk_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_rank*,
        bap_polynom_mpzm*)
    void bap_add_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    void bap_add_polynom_numeric_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        ba0_mpq_t)
    void bap_sub_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    void bap_submulmon_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_term*,
        ba0_mpq_t)
    void bap_comblin_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        ba0_int_p,
        bap_polynom_mpq*,
        ba0_int_p)
    void bap_addmulrk_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_rank*,
        bap_polynom_mpq*)
    void bap_submulrk_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_rank*,
        bap_polynom_mpq*)
    void bap_add_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_add_polynom_numeric_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        ba0_mint_hp_t)
    void bap_sub_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_submulmon_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_term*,
        ba0_mint_hp_t)
    void bap_comblin_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        ba0_int_p,
        bap_polynom_mint_hp*,
        ba0_int_p)
    void bap_addmulrk_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_rank*,
        bap_polynom_mint_hp*)
    void bap_submulrk_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_rank*,
        bap_polynom_mint_hp*)
    void bap_neg_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    void bap_mul_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    void bap_mul_polynom_variable_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*,
        bav_Idegree)
    void bap_mul_polynom_term_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_term*)
    void bap_mul_polynom_monom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        ba0_mpz_t,
        bav_term*)
    void bap_mul_polynom_numeric_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        ba0_mpz_t)
    void bap_mul_polynom_value_int_p_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_value_int_p*)
    void bap_pow_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_Idegree)
    void bap_neg_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    void bap_mul_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    void bap_mul_polynom_variable_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_variable*,
        bav_Idegree)
    void bap_mul_polynom_term_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_term*)
    void bap_mul_polynom_monom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        ba0_mpzm_t,
        bav_term*)
    void bap_mul_polynom_numeric_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        ba0_mpzm_t)
    void bap_mul_polynom_value_int_p_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_value_int_p*)
    void bap_pow_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_Idegree)
    void bap_neg_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    void bap_mul_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    void bap_mul_polynom_variable_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_variable*,
        bav_Idegree)
    void bap_mul_polynom_term_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_term*)
    void bap_mul_polynom_monom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        ba0_mpq_t,
        bav_term*)
    void bap_mul_polynom_numeric_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        ba0_mpq_t)
    void bap_mul_polynom_value_int_p_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_value_int_p*)
    void bap_pow_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_Idegree)
    void bap_neg_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_mul_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_mul_polynom_variable_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_variable*,
        bav_Idegree)
    void bap_mul_polynom_term_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_term*)
    void bap_mul_polynom_monom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        ba0_mint_hp_t,
        bav_term*)
    void bap_mul_polynom_numeric_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        ba0_mint_hp_t)
    void bap_mul_polynom_value_int_p_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_value_int_p*)
    void bap_pow_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_Idegree)
    bool bap_is_numeric_factor_polynom_mpz (
        bap_polynom_mpz*,
        ba0_mpz_t,
        bap_polynom_mpz*)
    bool bap_is_variable_factor_polynom_mpz (
        bap_polynom_mpz*,
        bav_variable*,
        bav_Idegree*)
    bool bap_is_factor_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    bool bap_is_factor_tableof_polynom_mpz (
        bap_polynom_mpz*,
        bap_tableof_polynom_mpz*)
    void bap_exquo_polynom_term_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_term*)
    void bap_exquo_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    struct bap_product_mpz:
        pass
    void bap_exquo_polynom_product_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_product_mpz*)
    void bap_pseudo_division_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_Idegree*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*)
    void bap_prem_polynom_mpz (
        bap_polynom_mpz*,
        bav_Idegree*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*)
    void bap_pquo_polynom_mpz (
        bap_polynom_mpz*,
        bav_Idegree*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*)
    void bap_rem_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*)
    bool bap_is_numeric_factor_polynom_mpzm (
        bap_polynom_mpzm*,
        ba0_mpzm_t,
        bap_polynom_mpzm*)
    bool bap_is_variable_factor_polynom_mpzm (
        bap_polynom_mpzm*,
        bav_variable*,
        bav_Idegree*)
    bool bap_is_factor_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    bool bap_is_factor_tableof_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_tableof_polynom_mpzm*)
    void bap_exquo_polynom_term_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_term*)
    void bap_exquo_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    struct bap_product_mpzm:
        pass
    void bap_exquo_polynom_product_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_product_mpzm*)
    void bap_pseudo_division_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_Idegree*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_variable*)
    void bap_prem_polynom_mpzm (
        bap_polynom_mpzm*,
        bav_Idegree*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_variable*)
    void bap_pquo_polynom_mpzm (
        bap_polynom_mpzm*,
        bav_Idegree*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_variable*)
    void bap_rem_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_variable*)
    bool bap_is_numeric_factor_polynom_mpq (
        bap_polynom_mpq*,
        ba0_mpq_t,
        bap_polynom_mpq*)
    bool bap_is_variable_factor_polynom_mpq (
        bap_polynom_mpq*,
        bav_variable*,
        bav_Idegree*)
    bool bap_is_factor_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    bool bap_is_factor_tableof_polynom_mpq (
        bap_polynom_mpq*,
        bap_tableof_polynom_mpq*)
    void bap_exquo_polynom_term_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_term*)
    void bap_exquo_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    struct bap_product_mpq:
        pass
    void bap_exquo_polynom_product_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_product_mpq*)
    void bap_pseudo_division_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_Idegree*,
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_variable*)
    void bap_prem_polynom_mpq (
        bap_polynom_mpq*,
        bav_Idegree*,
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_variable*)
    void bap_pquo_polynom_mpq (
        bap_polynom_mpq*,
        bav_Idegree*,
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_variable*)
    void bap_rem_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_variable*)
    bool bap_is_numeric_factor_polynom_mint_hp (
        bap_polynom_mint_hp*,
        ba0_mint_hp_t,
        bap_polynom_mint_hp*)
    bool bap_is_variable_factor_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bav_variable*,
        bav_Idegree*)
    bool bap_is_factor_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    bool bap_is_factor_tableof_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_tableof_polynom_mint_hp*)
    void bap_exquo_polynom_term_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_term*)
    void bap_exquo_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    struct bap_product_mint_hp:
        pass
    void bap_exquo_polynom_product_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_product_mint_hp*)
    void bap_pseudo_division_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_Idegree*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_variable*)
    void bap_prem_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bav_Idegree*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_variable*)
    void bap_pquo_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bav_Idegree*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_variable*)
    void bap_rem_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_variable*)
    void bap_simplify_zero_derivatives_of_parameter_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_tableof_parameter*)
    void bap_simplify_zero_derivatives_of_parameter_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_tableof_parameter*)
    void bap_simplify_zero_derivatives_of_parameter_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_tableof_parameter*)
    void bap_simplify_zero_derivatives_of_parameter_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_tableof_parameter*)
    void bap_muldiv_Lazard_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_Idegree)
    void bap_muldiv2_Lazard_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_Idegree)
    void bap_muldiv3_Lazard_polynom_mpz (
        bap_tableof_polynom_mpz*,
        bap_tableof_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_Idegree)
    void bap_nsr2_Ducos_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*)
    void bap_nsr3_Ducos_polynom_mpz (
        bap_tableof_polynom_mpz*,
        bap_tableof_polynom_mpz*,
        bap_tableof_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*)
    void bap_resultant2_Ducos_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*)
    void bap_lsr3_Ducos_polynom_mpz (
        bap_tableof_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*)
    void bap_muldiv_Lazard_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_Idegree)
    void bap_muldiv2_Lazard_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_Idegree)
    void bap_muldiv3_Lazard_polynom_mpzm (
        bap_tableof_polynom_mpzm*,
        bap_tableof_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_Idegree)
    void bap_nsr2_Ducos_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_variable*)
    void bap_nsr3_Ducos_polynom_mpzm (
        bap_tableof_polynom_mpzm*,
        bap_tableof_polynom_mpzm*,
        bap_tableof_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_variable*)
    void bap_resultant2_Ducos_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_variable*)
    void bap_lsr3_Ducos_polynom_mpzm (
        bap_tableof_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_variable*)
    void bap_muldiv_Lazard_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_Idegree)
    void bap_muldiv2_Lazard_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_Idegree)
    void bap_muldiv3_Lazard_polynom_mpq (
        bap_tableof_polynom_mpq*,
        bap_tableof_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_Idegree)
    void bap_nsr2_Ducos_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_variable*)
    void bap_nsr3_Ducos_polynom_mpq (
        bap_tableof_polynom_mpq*,
        bap_tableof_polynom_mpq*,
        bap_tableof_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_variable*)
    void bap_resultant2_Ducos_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_variable*)
    void bap_lsr3_Ducos_polynom_mpq (
        bap_tableof_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_variable*)
    void bap_muldiv_Lazard_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_Idegree)
    void bap_muldiv2_Lazard_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_Idegree)
    void bap_muldiv3_Lazard_polynom_mint_hp (
        bap_tableof_polynom_mint_hp*,
        bap_tableof_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_Idegree)
    void bap_nsr2_Ducos_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_variable*)
    void bap_nsr3_Ducos_polynom_mint_hp (
        bap_tableof_polynom_mint_hp*,
        bap_tableof_polynom_mint_hp*,
        bap_tableof_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_variable*)
    void bap_resultant2_Ducos_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_variable*)
    void bap_lsr3_Ducos_polynom_mint_hp (
        bap_tableof_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_variable*)
    void bap_set_point_polynom_mpz (
        ba0_point*,
        bap_polynom_mpz*,
        bool)
    void bap_eval_polynom_numeric_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*,
        ba0_mpz_t)
    void bap_eval_polynom_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*,
        bap_polynom_mpz*)
    void bap_eval_polynom_value_int_p_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_value_int_p*)
    void bap_eval_polynom_point_int_p_mpz (
        ba0_mpz_t*,
        bap_polynom_mpz*,
        bav_point_int_p*)
    void bap_evalcoeff_polynom_point_int_p_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_point_int_p*)
    void bap_set_point_polynom_mpzm (
        ba0_point*,
        bap_polynom_mpzm*,
        bool)
    void bap_eval_polynom_numeric_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_variable*,
        ba0_mpzm_t)
    void bap_eval_polynom_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_variable*,
        bap_polynom_mpzm*)
    void bap_eval_polynom_value_int_p_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_value_int_p*)
    void bap_eval_polynom_point_int_p_mpzm (
        ba0_mpzm_t*,
        bap_polynom_mpzm*,
        bav_point_int_p*)
    void bap_evalcoeff_polynom_point_int_p_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_point_int_p*)
    void bap_set_point_polynom_mpq (
        ba0_point*,
        bap_polynom_mpq*,
        bool)
    void bap_eval_polynom_numeric_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_variable*,
        ba0_mpq_t)
    void bap_eval_polynom_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_variable*,
        bap_polynom_mpq*)
    void bap_eval_polynom_value_int_p_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_value_int_p*)
    void bap_eval_polynom_point_int_p_mpq (
        ba0_mpq_t*,
        bap_polynom_mpq*,
        bav_point_int_p*)
    void bap_evalcoeff_polynom_point_int_p_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_point_int_p*)
    void bap_set_point_polynom_mint_hp (
        ba0_point*,
        bap_polynom_mint_hp*,
        bool)
    void bap_eval_polynom_numeric_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_variable*,
        ba0_mint_hp_t)
    void bap_eval_polynom_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_variable*,
        bap_polynom_mint_hp*)
    void bap_eval_polynom_value_int_p_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_value_int_p*)
    void bap_eval_polynom_point_int_p_mint_hp (
        ba0_mint_hp_t*,
        bap_polynom_mint_hp*,
        bav_point_int_p*)
    void bap_evalcoeff_polynom_point_int_p_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_point_int_p*)
    bool bap_is_constant_polynom_mpz (
        bap_polynom_mpz*,
        bav_symbol*,
        bav_tableof_parameter*)
    void bap_diff_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_symbol*,
        bav_tableof_variable*)
    void bap_diff2_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_term*,
        bav_tableof_variable*)
    void bap_involved_derivations_polynom_mpz (
        bav_tableof_variable*,
        bap_polynom_mpz*)
    void bap_zero_derivatives_of_tableof_parameter_mpz (
        bap_tableof_polynom_mpz*,
        bav_tableof_parameter*)
    bool bap_is_constant_polynom_mpzm (
        bap_polynom_mpzm*,
        bav_symbol*,
        bav_tableof_parameter*)
    void bap_diff_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_symbol*,
        bav_tableof_variable*)
    void bap_diff2_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_term*,
        bav_tableof_variable*)
    void bap_involved_derivations_polynom_mpzm (
        bav_tableof_variable*,
        bap_polynom_mpzm*)
    void bap_zero_derivatives_of_tableof_parameter_mpzm (
        bap_tableof_polynom_mpzm*,
        bav_tableof_parameter*)
    bool bap_is_constant_polynom_mpq (
        bap_polynom_mpq*,
        bav_symbol*,
        bav_tableof_parameter*)
    void bap_diff_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_symbol*,
        bav_tableof_variable*)
    void bap_diff2_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bav_term*,
        bav_tableof_variable*)
    void bap_involved_derivations_polynom_mpq (
        bav_tableof_variable*,
        bap_polynom_mpq*)
    void bap_zero_derivatives_of_tableof_parameter_mpq (
        bap_tableof_polynom_mpq*,
        bav_tableof_parameter*)
    bool bap_is_constant_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bav_symbol*,
        bav_tableof_parameter*)
    void bap_diff_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_symbol*,
        bav_tableof_variable*)
    void bap_diff2_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bav_term*,
        bav_tableof_variable*)
    void bap_involved_derivations_polynom_mint_hp (
        bav_tableof_variable*,
        bap_polynom_mint_hp*)
    void bap_zero_derivatives_of_tableof_parameter_mint_hp (
        bap_tableof_polynom_mint_hp*,
        bav_tableof_parameter*)
    void bap_numeric_initial_one_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    void bap_Euclidean_division_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    void bap_Euclid_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    void bap_extended_Euclid_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    void bap_numeric_initial_one_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    void bap_Euclidean_division_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    void bap_Euclid_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    void bap_extended_Euclid_polynom_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    void bap_numeric_initial_one_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_Euclidean_division_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_Euclid_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_extended_Euclid_polynom_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*,
        bap_polynom_mint_hp*)
    enum bap_typeof_total_rank:
        bap_exact_total_rank
        bap_approx_total_rank
    enum bap_rank_code:
        bap_rank_too_low
        bap_rank_ok
        bap_rank_too_high
    ctypedef bap_rank_code bap_rank_code_function (bav_term*)
    struct bap_creator_mpz:
        bap_polynom_mpz* polfi
        bap_creator_clot_mpz crea
        bap_typeof_total_rank type
    void bap_begin_creator_mpz (
        bap_creator_mpz*,
        bap_polynom_mpz*,
        bav_term*,
        bap_typeof_total_rank,
        ba0_int_p)
    void bap_append_creator_mpz (
        bap_creator_mpz*,
        bap_polynom_mpz*,
        ba0_int_p)
    void bap_write_creator_mpz (
        bap_creator_mpz*,
        bav_term*,
        ba0_mpz_t)
    void bap_write_neg_creator_mpz (
        bap_creator_mpz*,
        bav_term*,
        ba0_mpz_t)
    bool bap_is_write_allable_creator_mpz (
        bap_creator_mpz*,
        bap_polynom_mpz*)
    void bap_write_all_creator_mpz (
        bap_creator_mpz*,
        bap_polynom_mpz*)
    void bap_write_neg_all_creator_mpz (
        bap_creator_mpz*,
        bap_polynom_mpz*)
    void bap_write_mul_all_creator_mpz (
        bap_creator_mpz*,
        bap_polynom_mpz*,
        ba0_mpz_t)
    void bap_write_exquo_all_creator_mpz (
        bap_creator_mpz*,
        bap_polynom_mpz*,
        ba0_mpz_t)
    void bap_close_creator_mpz (bap_creator_mpz*)
    struct bap_creator_mpzm:
        bap_polynom_mpzm* polfi
        bap_creator_clot_mpzm crea
        bap_typeof_total_rank type
    void bap_begin_creator_mpzm (
        bap_creator_mpzm*,
        bap_polynom_mpzm*,
        bav_term*,
        bap_typeof_total_rank,
        ba0_int_p)
    void bap_append_creator_mpzm (
        bap_creator_mpzm*,
        bap_polynom_mpzm*,
        ba0_int_p)
    void bap_write_creator_mpzm (
        bap_creator_mpzm*,
        bav_term*,
        ba0_mpzm_t)
    void bap_write_neg_creator_mpzm (
        bap_creator_mpzm*,
        bav_term*,
        ba0_mpzm_t)
    bool bap_is_write_allable_creator_mpzm (
        bap_creator_mpzm*,
        bap_polynom_mpzm*)
    void bap_write_all_creator_mpzm (
        bap_creator_mpzm*,
        bap_polynom_mpzm*)
    void bap_write_neg_all_creator_mpzm (
        bap_creator_mpzm*,
        bap_polynom_mpzm*)
    void bap_write_mul_all_creator_mpzm (
        bap_creator_mpzm*,
        bap_polynom_mpzm*,
        ba0_mpzm_t)
    void bap_write_exquo_all_creator_mpzm (
        bap_creator_mpzm*,
        bap_polynom_mpzm*,
        ba0_mpzm_t)
    void bap_close_creator_mpzm (bap_creator_mpzm*)
    struct bap_creator_mpq:
        bap_polynom_mpq* polfi
        bap_creator_clot_mpq crea
        bap_typeof_total_rank type
    void bap_begin_creator_mpq (
        bap_creator_mpq*,
        bap_polynom_mpq*,
        bav_term*,
        bap_typeof_total_rank,
        ba0_int_p)
    void bap_append_creator_mpq (
        bap_creator_mpq*,
        bap_polynom_mpq*,
        ba0_int_p)
    void bap_write_creator_mpq (
        bap_creator_mpq*,
        bav_term*,
        ba0_mpq_t)
    void bap_write_neg_creator_mpq (
        bap_creator_mpq*,
        bav_term*,
        ba0_mpq_t)
    bool bap_is_write_allable_creator_mpq (
        bap_creator_mpq*,
        bap_polynom_mpq*)
    void bap_write_all_creator_mpq (
        bap_creator_mpq*,
        bap_polynom_mpq*)
    void bap_write_neg_all_creator_mpq (
        bap_creator_mpq*,
        bap_polynom_mpq*)
    void bap_write_mul_all_creator_mpq (
        bap_creator_mpq*,
        bap_polynom_mpq*,
        ba0_mpq_t)
    void bap_write_exquo_all_creator_mpq (
        bap_creator_mpq*,
        bap_polynom_mpq*,
        ba0_mpq_t)
    void bap_close_creator_mpq (bap_creator_mpq*)
    struct bap_creator_mint_hp:
        bap_polynom_mint_hp* polfi
        bap_creator_clot_mint_hp crea
        bap_typeof_total_rank type
    void bap_begin_creator_mint_hp (
        bap_creator_mint_hp*,
        bap_polynom_mint_hp*,
        bav_term*,
        bap_typeof_total_rank,
        ba0_int_p)
    void bap_append_creator_mint_hp (
        bap_creator_mint_hp*,
        bap_polynom_mint_hp*,
        ba0_int_p)
    void bap_write_creator_mint_hp (
        bap_creator_mint_hp*,
        bav_term*,
        ba0_mint_hp_t)
    void bap_write_neg_creator_mint_hp (
        bap_creator_mint_hp*,
        bav_term*,
        ba0_mint_hp_t)
    bool bap_is_write_allable_creator_mint_hp (
        bap_creator_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_write_all_creator_mint_hp (
        bap_creator_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_write_neg_all_creator_mint_hp (
        bap_creator_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_write_mul_all_creator_mint_hp (
        bap_creator_mint_hp*,
        bap_polynom_mint_hp*,
        ba0_mint_hp_t)
    void bap_write_exquo_all_creator_mint_hp (
        bap_creator_mint_hp*,
        bap_polynom_mint_hp*,
        ba0_mint_hp_t)
    void bap_close_creator_mint_hp (bap_creator_mint_hp*)
    struct bap_itermon_mpz:
        bap_polynom_mpz* polfi
        bap_itermon_clot_mpz iter
        bap_iterator_index iter_ix
    void bap_begin_itermon_mpz (
        bap_itermon_mpz*,
        bap_polynom_mpz*)
    void bap_end_itermon_mpz (
        bap_itermon_mpz*,
        bap_polynom_mpz*)
    void bap_close_itermon_mpz (bap_itermon_mpz*)
    void bap_set_itermon_mpz (
        bap_itermon_mpz*,
        bap_itermon_mpz*)
    bool bap_outof_itermon_mpz (bap_itermon_mpz*)
    void bap_next_itermon_mpz (bap_itermon_mpz*)
    void bap_prev_itermon_mpz (bap_itermon_mpz*)
    void bap_goto_itermon_mpz (
        bap_itermon_mpz*,
        ba0_int_p)
    ba0_mpz_t* bap_coeff_itermon_mpz (bap_itermon_mpz*)
    void bap_term_itermon_mpz (
        bav_term*,
        bap_itermon_mpz*)
    void bap_reductum_itermon_mpz (
        bap_itermon_mpz*,
        bap_polynom_mpz*)
    void bap_seekfirst_itermon_mpz (
        bap_itermon_mpz*,
        bap_rank_code_function*)
    void bap_seeklast_itermon_mpz (
        bap_itermon_mpz*,
        bap_rank_code_function*)
    struct bap_itermon_mpzm:
        bap_polynom_mpzm* polfi
        bap_itermon_clot_mpzm iter
        bap_iterator_index iter_ix
    void bap_begin_itermon_mpzm (
        bap_itermon_mpzm*,
        bap_polynom_mpzm*)
    void bap_end_itermon_mpzm (
        bap_itermon_mpzm*,
        bap_polynom_mpzm*)
    void bap_close_itermon_mpzm (bap_itermon_mpzm*)
    void bap_set_itermon_mpzm (
        bap_itermon_mpzm*,
        bap_itermon_mpzm*)
    bool bap_outof_itermon_mpzm (bap_itermon_mpzm*)
    void bap_next_itermon_mpzm (bap_itermon_mpzm*)
    void bap_prev_itermon_mpzm (bap_itermon_mpzm*)
    void bap_goto_itermon_mpzm (
        bap_itermon_mpzm*,
        ba0_int_p)
    ba0_mpzm_t* bap_coeff_itermon_mpzm (bap_itermon_mpzm*)
    void bap_term_itermon_mpzm (
        bav_term*,
        bap_itermon_mpzm*)
    void bap_reductum_itermon_mpzm (
        bap_itermon_mpzm*,
        bap_polynom_mpzm*)
    void bap_seekfirst_itermon_mpzm (
        bap_itermon_mpzm*,
        bap_rank_code_function*)
    void bap_seeklast_itermon_mpzm (
        bap_itermon_mpzm*,
        bap_rank_code_function*)
    struct bap_itermon_mpq:
        bap_polynom_mpq* polfi
        bap_itermon_clot_mpq iter
        bap_iterator_index iter_ix
    void bap_begin_itermon_mpq (
        bap_itermon_mpq*,
        bap_polynom_mpq*)
    void bap_end_itermon_mpq (
        bap_itermon_mpq*,
        bap_polynom_mpq*)
    void bap_close_itermon_mpq (bap_itermon_mpq*)
    void bap_set_itermon_mpq (
        bap_itermon_mpq*,
        bap_itermon_mpq*)
    bool bap_outof_itermon_mpq (bap_itermon_mpq*)
    void bap_next_itermon_mpq (bap_itermon_mpq*)
    void bap_prev_itermon_mpq (bap_itermon_mpq*)
    void bap_goto_itermon_mpq (
        bap_itermon_mpq*,
        ba0_int_p)
    ba0_mpq_t* bap_coeff_itermon_mpq (bap_itermon_mpq*)
    void bap_term_itermon_mpq (
        bav_term*,
        bap_itermon_mpq*)
    void bap_reductum_itermon_mpq (
        bap_itermon_mpq*,
        bap_polynom_mpq*)
    void bap_seekfirst_itermon_mpq (
        bap_itermon_mpq*,
        bap_rank_code_function*)
    void bap_seeklast_itermon_mpq (
        bap_itermon_mpq*,
        bap_rank_code_function*)
    struct bap_itermon_mint_hp:
        bap_polynom_mint_hp* polfi
        bap_itermon_clot_mint_hp iter
        bap_iterator_index iter_ix
    void bap_begin_itermon_mint_hp (
        bap_itermon_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_end_itermon_mint_hp (
        bap_itermon_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_close_itermon_mint_hp (bap_itermon_mint_hp*)
    void bap_set_itermon_mint_hp (
        bap_itermon_mint_hp*,
        bap_itermon_mint_hp*)
    bool bap_outof_itermon_mint_hp (bap_itermon_mint_hp*)
    void bap_next_itermon_mint_hp (bap_itermon_mint_hp*)
    void bap_prev_itermon_mint_hp (bap_itermon_mint_hp*)
    void bap_goto_itermon_mint_hp (
        bap_itermon_mint_hp*,
        ba0_int_p)
    ba0_mint_hp_t* bap_coeff_itermon_mint_hp (bap_itermon_mint_hp*)
    void bap_term_itermon_mint_hp (
        bav_term*,
        bap_itermon_mint_hp*)
    void bap_reductum_itermon_mint_hp (
        bap_itermon_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_seekfirst_itermon_mint_hp (
        bap_itermon_mint_hp*,
        bap_rank_code_function*)
    void bap_seeklast_itermon_mint_hp (
        bap_itermon_mint_hp*,
        bap_rank_code_function*)
    struct bap_itercoeff_mpz:
        bap_polynom_mpz* polfi
        bav_variable* last_variable
        bap_itermon_mpz debut
        bap_itermon_mpz fin
        bool outof
    void bap_begin_itercoeff_mpz (
        bap_itercoeff_mpz*,
        bap_polynom_mpz*,
        bav_variable*)
    bool bap_outof_itercoeff_mpz (bap_itercoeff_mpz*)
    void bap_close_itercoeff_mpz (bap_itercoeff_mpz*)
    void bap_next_itercoeff_mpz (bap_itercoeff_mpz*)
    void bap_term_itercoeff_mpz (
        bav_term*,
        bap_itercoeff_mpz*)
    void bap_coeff_itercoeff_mpz (
        bap_polynom_mpz*,
        bap_itercoeff_mpz*)
    void bap_seek_coeff_itercoeff_mpz (
        bap_polynom_mpz*,
        bap_itercoeff_mpz*,
        bav_term*)
    struct bap_itercoeff_mpzm:
        bap_polynom_mpzm* polfi
        bav_variable* last_variable
        bap_itermon_mpzm debut
        bap_itermon_mpzm fin
        bool outof
    void bap_begin_itercoeff_mpzm (
        bap_itercoeff_mpzm*,
        bap_polynom_mpzm*,
        bav_variable*)
    bool bap_outof_itercoeff_mpzm (bap_itercoeff_mpzm*)
    void bap_close_itercoeff_mpzm (bap_itercoeff_mpzm*)
    void bap_next_itercoeff_mpzm (bap_itercoeff_mpzm*)
    void bap_term_itercoeff_mpzm (
        bav_term*,
        bap_itercoeff_mpzm*)
    void bap_coeff_itercoeff_mpzm (
        bap_polynom_mpzm*,
        bap_itercoeff_mpzm*)
    void bap_seek_coeff_itercoeff_mpzm (
        bap_polynom_mpzm*,
        bap_itercoeff_mpzm*,
        bav_term*)
    struct bap_itercoeff_mpq:
        bap_polynom_mpq* polfi
        bav_variable* last_variable
        bap_itermon_mpq debut
        bap_itermon_mpq fin
        bool outof
    void bap_begin_itercoeff_mpq (
        bap_itercoeff_mpq*,
        bap_polynom_mpq*,
        bav_variable*)
    bool bap_outof_itercoeff_mpq (bap_itercoeff_mpq*)
    void bap_close_itercoeff_mpq (bap_itercoeff_mpq*)
    void bap_next_itercoeff_mpq (bap_itercoeff_mpq*)
    void bap_term_itercoeff_mpq (
        bav_term*,
        bap_itercoeff_mpq*)
    void bap_coeff_itercoeff_mpq (
        bap_polynom_mpq*,
        bap_itercoeff_mpq*)
    void bap_seek_coeff_itercoeff_mpq (
        bap_polynom_mpq*,
        bap_itercoeff_mpq*,
        bav_term*)
    struct bap_itercoeff_mint_hp:
        bap_polynom_mint_hp* polfi
        bav_variable* last_variable
        bap_itermon_mint_hp debut
        bap_itermon_mint_hp fin
        bool outof
    void bap_begin_itercoeff_mint_hp (
        bap_itercoeff_mint_hp*,
        bap_polynom_mint_hp*,
        bav_variable*)
    bool bap_outof_itercoeff_mint_hp (bap_itercoeff_mint_hp*)
    void bap_close_itercoeff_mint_hp (bap_itercoeff_mint_hp*)
    void bap_next_itercoeff_mint_hp (bap_itercoeff_mint_hp*)
    void bap_term_itercoeff_mint_hp (
        bav_term*,
        bap_itercoeff_mint_hp*)
    void bap_coeff_itercoeff_mint_hp (
        bap_polynom_mint_hp*,
        bap_itercoeff_mint_hp*)
    void bap_seek_coeff_itercoeff_mint_hp (
        bap_polynom_mint_hp*,
        bap_itercoeff_mint_hp*,
        bav_term*)
    struct bap_power_mpz:
        bap_polynom_mpz factor
        bav_Idegree exponent
    struct bap_product_mpz:
        ba0_mpz_t num_factor
        ba0_int_p alloc
        ba0_int_p size
        bap_power_mpz* tab
    struct bap_tableof_product_mpz:
        ba0_int_p alloc
        ba0_int_p size
        bap_product_mpz** tab
    void bap_init_power_mpz (bap_power_mpz*)
    bap_power_mpz* bap_new_power_mpz ()
    void bap_set_power_mpz (
        bap_power_mpz*,
        bap_power_mpz*)
    void bap_set_power_polynom_mpz (
        bap_power_mpz*,
        bap_polynom_mpz*,
        bav_Idegree)
    void bap_pow_power_mpz (
        bap_power_mpz*,
        bap_power_mpz*,
        bav_Idegree)
    void bap_init_product_mpz (bap_product_mpz*)
    void bap_init_product_zero_mpz (bap_product_mpz*)
    void bap_realloc_product_mpz (
        bap_product_mpz*,
        ba0_int_p)
    bap_product_mpz* bap_new_product_mpz ()
    bap_product_mpz* bap_new_product_zero_mpz ()
    bool bap_is_zero_product_mpz (bap_product_mpz*)
    bool bap_is_one_product_mpz (bap_product_mpz*)
    bool bap_is_numeric_product_mpz (bap_product_mpz*)
    void bap_set_product_zero_mpz (bap_product_mpz*)
    void bap_set_product_one_mpz (bap_product_mpz*)
    void bap_set_product_numeric_mpz (
        bap_product_mpz*,
        ba0_mpz_t)
    void bap_set_product_polynom_mpz (
        bap_product_mpz*,
        bap_polynom_mpz*,
        bav_Idegree)
    void bap_set_product_mpz (
        bap_product_mpz*,
        bap_product_mpz*)
    void bap_expand_product_mpz (
        bap_polynom_mpz*,
        bap_product_mpz*)
    void bap_mul_product_polynom_mpz (
        bap_product_mpz*,
        bap_product_mpz*,
        bap_polynom_mpz*,
        bav_Idegree)
    void bap_neg_product_mpz (
        bap_product_mpz*,
        bap_product_mpz*)
    void bap_mul_product_numeric_mpz (
        bap_product_mpz*,
        bap_product_mpz*,
        ba0_mpz_t)
    void bap_mul_product_term_mpz (
        bap_product_mpz*,
        bap_product_mpz*,
        bav_term*)
    void bap_mul_product_mpz (
        bap_product_mpz*,
        bap_product_mpz*,
        bap_product_mpz*)
    void bap_pow_product_mpz (
        bap_product_mpz*,
        bap_product_mpz*,
        bav_Idegree)
    void bap_exquo_product_polynom_mpz (
        bap_product_mpz*,
        bap_product_mpz*,
        bap_polynom_mpz*,
        bav_Idegree)
    bav_Idegree bap_exponent_product_mpz (
        bap_product_mpz*,
        bap_polynom_mpz*)
    void bap_sort_product_mpz (
        bap_product_mpz*,
        bap_product_mpz*)
    void bap_physort_product_mpz (
        bap_product_mpz*,
        bap_typeof_transform)
    struct bap_power_mpzm:
        bap_polynom_mpzm factor
        bav_Idegree exponent
    struct bap_product_mpzm:
        ba0_mpzm_t num_factor
        ba0_int_p alloc
        ba0_int_p size
        bap_power_mpzm* tab
    struct bap_tableof_product_mpzm:
        ba0_int_p alloc
        ba0_int_p size
        bap_product_mpzm** tab
    void bap_init_power_mpzm (bap_power_mpzm*)
    bap_power_mpzm* bap_new_power_mpzm ()
    void bap_set_power_mpzm (
        bap_power_mpzm*,
        bap_power_mpzm*)
    void bap_set_power_polynom_mpzm (
        bap_power_mpzm*,
        bap_polynom_mpzm*,
        bav_Idegree)
    void bap_pow_power_mpzm (
        bap_power_mpzm*,
        bap_power_mpzm*,
        bav_Idegree)
    void bap_init_product_mpzm (bap_product_mpzm*)
    void bap_init_product_zero_mpzm (bap_product_mpzm*)
    void bap_realloc_product_mpzm (
        bap_product_mpzm*,
        ba0_int_p)
    bap_product_mpzm* bap_new_product_mpzm ()
    bap_product_mpzm* bap_new_product_zero_mpzm ()
    bool bap_is_zero_product_mpzm (bap_product_mpzm*)
    bool bap_is_one_product_mpzm (bap_product_mpzm*)
    bool bap_is_numeric_product_mpzm (bap_product_mpzm*)
    void bap_set_product_zero_mpzm (bap_product_mpzm*)
    void bap_set_product_one_mpzm (bap_product_mpzm*)
    void bap_set_product_numeric_mpzm (
        bap_product_mpzm*,
        ba0_mpzm_t)
    void bap_set_product_polynom_mpzm (
        bap_product_mpzm*,
        bap_polynom_mpzm*,
        bav_Idegree)
    void bap_set_product_mpzm (
        bap_product_mpzm*,
        bap_product_mpzm*)
    void bap_expand_product_mpzm (
        bap_polynom_mpzm*,
        bap_product_mpzm*)
    void bap_mul_product_polynom_mpzm (
        bap_product_mpzm*,
        bap_product_mpzm*,
        bap_polynom_mpzm*,
        bav_Idegree)
    void bap_neg_product_mpzm (
        bap_product_mpzm*,
        bap_product_mpzm*)
    void bap_mul_product_numeric_mpzm (
        bap_product_mpzm*,
        bap_product_mpzm*,
        ba0_mpzm_t)
    void bap_mul_product_term_mpzm (
        bap_product_mpzm*,
        bap_product_mpzm*,
        bav_term*)
    void bap_mul_product_mpzm (
        bap_product_mpzm*,
        bap_product_mpzm*,
        bap_product_mpzm*)
    void bap_pow_product_mpzm (
        bap_product_mpzm*,
        bap_product_mpzm*,
        bav_Idegree)
    void bap_exquo_product_polynom_mpzm (
        bap_product_mpzm*,
        bap_product_mpzm*,
        bap_polynom_mpzm*,
        bav_Idegree)
    bav_Idegree bap_exponent_product_mpzm (
        bap_product_mpzm*,
        bap_polynom_mpzm*)
    void bap_sort_product_mpzm (
        bap_product_mpzm*,
        bap_product_mpzm*)
    void bap_physort_product_mpzm (
        bap_product_mpzm*,
        bap_typeof_transform)
    struct bap_power_mpq:
        bap_polynom_mpq factor
        bav_Idegree exponent
    struct bap_product_mpq:
        ba0_mpq_t num_factor
        ba0_int_p alloc
        ba0_int_p size
        bap_power_mpq* tab
    struct bap_tableof_product_mpq:
        ba0_int_p alloc
        ba0_int_p size
        bap_product_mpq** tab
    void bap_init_power_mpq (bap_power_mpq*)
    bap_power_mpq* bap_new_power_mpq ()
    void bap_set_power_mpq (
        bap_power_mpq*,
        bap_power_mpq*)
    void bap_set_power_polynom_mpq (
        bap_power_mpq*,
        bap_polynom_mpq*,
        bav_Idegree)
    void bap_pow_power_mpq (
        bap_power_mpq*,
        bap_power_mpq*,
        bav_Idegree)
    void bap_init_product_mpq (bap_product_mpq*)
    void bap_init_product_zero_mpq (bap_product_mpq*)
    void bap_realloc_product_mpq (
        bap_product_mpq*,
        ba0_int_p)
    bap_product_mpq* bap_new_product_mpq ()
    bap_product_mpq* bap_new_product_zero_mpq ()
    bool bap_is_zero_product_mpq (bap_product_mpq*)
    bool bap_is_one_product_mpq (bap_product_mpq*)
    bool bap_is_numeric_product_mpq (bap_product_mpq*)
    void bap_set_product_zero_mpq (bap_product_mpq*)
    void bap_set_product_one_mpq (bap_product_mpq*)
    void bap_set_product_numeric_mpq (
        bap_product_mpq*,
        ba0_mpq_t)
    void bap_set_product_polynom_mpq (
        bap_product_mpq*,
        bap_polynom_mpq*,
        bav_Idegree)
    void bap_set_product_mpq (
        bap_product_mpq*,
        bap_product_mpq*)
    void bap_expand_product_mpq (
        bap_polynom_mpq*,
        bap_product_mpq*)
    void bap_mul_product_polynom_mpq (
        bap_product_mpq*,
        bap_product_mpq*,
        bap_polynom_mpq*,
        bav_Idegree)
    void bap_neg_product_mpq (
        bap_product_mpq*,
        bap_product_mpq*)
    void bap_mul_product_numeric_mpq (
        bap_product_mpq*,
        bap_product_mpq*,
        ba0_mpq_t)
    void bap_mul_product_term_mpq (
        bap_product_mpq*,
        bap_product_mpq*,
        bav_term*)
    void bap_mul_product_mpq (
        bap_product_mpq*,
        bap_product_mpq*,
        bap_product_mpq*)
    void bap_pow_product_mpq (
        bap_product_mpq*,
        bap_product_mpq*,
        bav_Idegree)
    void bap_exquo_product_polynom_mpq (
        bap_product_mpq*,
        bap_product_mpq*,
        bap_polynom_mpq*,
        bav_Idegree)
    bav_Idegree bap_exponent_product_mpq (
        bap_product_mpq*,
        bap_polynom_mpq*)
    void bap_sort_product_mpq (
        bap_product_mpq*,
        bap_product_mpq*)
    void bap_physort_product_mpq (
        bap_product_mpq*,
        bap_typeof_transform)
    struct bap_power_mint_hp:
        bap_polynom_mint_hp factor
        bav_Idegree exponent
    struct bap_product_mint_hp:
        ba0_mint_hp_t num_factor
        ba0_int_p alloc
        ba0_int_p size
        bap_power_mint_hp* tab
    struct bap_tableof_product_mint_hp:
        ba0_int_p alloc
        ba0_int_p size
        bap_product_mint_hp** tab
    void bap_init_power_mint_hp (bap_power_mint_hp*)
    bap_power_mint_hp* bap_new_power_mint_hp ()
    void bap_set_power_mint_hp (
        bap_power_mint_hp*,
        bap_power_mint_hp*)
    void bap_set_power_polynom_mint_hp (
        bap_power_mint_hp*,
        bap_polynom_mint_hp*,
        bav_Idegree)
    void bap_pow_power_mint_hp (
        bap_power_mint_hp*,
        bap_power_mint_hp*,
        bav_Idegree)
    void bap_init_product_mint_hp (bap_product_mint_hp*)
    void bap_init_product_zero_mint_hp (bap_product_mint_hp*)
    void bap_realloc_product_mint_hp (
        bap_product_mint_hp*,
        ba0_int_p)
    bap_product_mint_hp* bap_new_product_mint_hp ()
    bap_product_mint_hp* bap_new_product_zero_mint_hp ()
    bool bap_is_zero_product_mint_hp (bap_product_mint_hp*)
    bool bap_is_one_product_mint_hp (bap_product_mint_hp*)
    bool bap_is_numeric_product_mint_hp (bap_product_mint_hp*)
    void bap_set_product_zero_mint_hp (bap_product_mint_hp*)
    void bap_set_product_one_mint_hp (bap_product_mint_hp*)
    void bap_set_product_numeric_mint_hp (
        bap_product_mint_hp*,
        ba0_mint_hp_t)
    void bap_set_product_polynom_mint_hp (
        bap_product_mint_hp*,
        bap_polynom_mint_hp*,
        bav_Idegree)
    void bap_set_product_mint_hp (
        bap_product_mint_hp*,
        bap_product_mint_hp*)
    void bap_expand_product_mint_hp (
        bap_polynom_mint_hp*,
        bap_product_mint_hp*)
    void bap_mul_product_polynom_mint_hp (
        bap_product_mint_hp*,
        bap_product_mint_hp*,
        bap_polynom_mint_hp*,
        bav_Idegree)
    void bap_neg_product_mint_hp (
        bap_product_mint_hp*,
        bap_product_mint_hp*)
    void bap_mul_product_numeric_mint_hp (
        bap_product_mint_hp*,
        bap_product_mint_hp*,
        ba0_mint_hp_t)
    void bap_mul_product_term_mint_hp (
        bap_product_mint_hp*,
        bap_product_mint_hp*,
        bav_term*)
    void bap_mul_product_mint_hp (
        bap_product_mint_hp*,
        bap_product_mint_hp*,
        bap_product_mint_hp*)
    void bap_pow_product_mint_hp (
        bap_product_mint_hp*,
        bap_product_mint_hp*,
        bav_Idegree)
    void bap_exquo_product_polynom_mint_hp (
        bap_product_mint_hp*,
        bap_product_mint_hp*,
        bap_polynom_mint_hp*,
        bav_Idegree)
    bav_Idegree bap_exponent_product_mint_hp (
        bap_product_mint_hp*,
        bap_polynom_mint_hp*)
    void bap_sort_product_mint_hp (
        bap_product_mint_hp*,
        bap_product_mint_hp*)
    void bap_physort_product_mint_hp (
        bap_product_mint_hp*,
        bap_typeof_transform)
    void bap_factor_content_product_mpz (
        bap_product_mpz*,
        bap_product_mpz*)
    void bap_gcd_product_mpz (
        bap_product_mpz*,
        bap_product_mpz*,
        bap_product_mpz*,
        bap_product_mpz*,
        bap_product_mpz*)
    void bap_init_geobucket_mpz (bap_geobucket_mpz)
    void bap_reset_geobucket_mpz (bap_geobucket_mpz)
    void bap_mul_geobucket_mpz (
        bap_geobucket_mpz,
        bap_polynom_mpz*)
    void bap_mul_geobucket_numeric_mpz (
        bap_geobucket_mpz,
        ba0_mpz_t)
    void bap_add_geobucket_mpz (
        bap_geobucket_mpz,
        bap_polynom_mpz*)
    void bap_sub_geobucket_mpz (
        bap_geobucket_mpz,
        bap_polynom_mpz*)
    void bap_set_polynom_geobucket_mpz (
        bap_polynom_mpz*,
        bap_geobucket_mpz)
    void bap_init_geobucket_mpzm (bap_geobucket_mpzm)
    void bap_reset_geobucket_mpzm (bap_geobucket_mpzm)
    void bap_mul_geobucket_mpzm (
        bap_geobucket_mpzm,
        bap_polynom_mpzm*)
    void bap_mul_geobucket_numeric_mpzm (
        bap_geobucket_mpzm,
        ba0_mpzm_t)
    void bap_add_geobucket_mpzm (
        bap_geobucket_mpzm,
        bap_polynom_mpzm*)
    void bap_sub_geobucket_mpzm (
        bap_geobucket_mpzm,
        bap_polynom_mpzm*)
    void bap_set_polynom_geobucket_mpzm (
        bap_polynom_mpzm*,
        bap_geobucket_mpzm)
    void bap_init_geobucket_mpq (bap_geobucket_mpq)
    void bap_reset_geobucket_mpq (bap_geobucket_mpq)
    void bap_mul_geobucket_mpq (
        bap_geobucket_mpq,
        bap_polynom_mpq*)
    void bap_mul_geobucket_numeric_mpq (
        bap_geobucket_mpq,
        ba0_mpq_t)
    void bap_add_geobucket_mpq (
        bap_geobucket_mpq,
        bap_polynom_mpq*)
    void bap_sub_geobucket_mpq (
        bap_geobucket_mpq,
        bap_polynom_mpq*)
    void bap_set_polynom_geobucket_mpq (
        bap_polynom_mpq*,
        bap_geobucket_mpq)
    void bap_init_geobucket_mint_hp (bap_geobucket_mint_hp)
    void bap_reset_geobucket_mint_hp (bap_geobucket_mint_hp)
    void bap_mul_geobucket_mint_hp (
        bap_geobucket_mint_hp,
        bap_polynom_mint_hp*)
    void bap_mul_geobucket_numeric_mint_hp (
        bap_geobucket_mint_hp,
        ba0_mint_hp_t)
    void bap_add_geobucket_mint_hp (
        bap_geobucket_mint_hp,
        bap_polynom_mint_hp*)
    void bap_sub_geobucket_mint_hp (
        bap_geobucket_mint_hp,
        bap_polynom_mint_hp*)
    void bap_set_polynom_geobucket_mint_hp (
        bap_polynom_mint_hp*,
        bap_geobucket_mint_hp)
    void bap_polynom_mpq_to_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpq*)
    void bap_coeftayl_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_value_int_p*,
        bav_Idegree)
    void bap_maxnorm_polynom_mpz (
        ba0_mpz_t,
        bap_polynom_mpz*)
    void bap_normal_sign_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    void bap_numeric_content_polynom_mpz (
        ba0_mpz_t,
        bap_polynom_mpz*)
    void bap_signed_numeric_content_polynom_mpz (
        ba0_mpz_t,
        bap_polynom_mpz*)
    void bap_numeric_primpart_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    void bap_normal_numeric_primpart_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    void bap_exquo_polynom_numeric_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        ba0_mpz_t)
    bool bap_is_numeric_factor_polynom_mpz (
        bap_polynom_mpz*,
        ba0_mpz_t,
        bap_polynom_mpz*)
    void bap_genpoly_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        ba0_mpz_t,
        bav_variable*)
    void bap_new_point_int_p_mpz (
        bav_point_int_p*,
        bap_tableof_polynom_mpz*,
        bap_product_mpz*,
        ba0_int_p)
    struct bap_ideal_lifting:
        bap_polynom_mpz* A
        bap_polynom_mpz* initial
        bap_product_mpz factors_initial
        bap_product_mpzm factors_mod_point
        bav_point_int_p point
        ba0_mpz_t p
        ba0_int_p l
    void bap_HL_init_ideal_lifting (bap_ideal_lifting*)
    void bap_HL_printf_ideal_lifting (void*)
    void bap_HL_integer_divisors (
        ba0_mpz_t*,
        bap_ideal_lifting*,
        ba0_mpz_t*)
    void bap_HL_end_redistribute (
        bap_ideal_lifting*,
        ba0_mpz_t*,
        bap_polynom_mpz*,
        ba0_mpz_t)
    void bap_HL_begin_redistribute (
        bap_ideal_lifting*,
        ba0_mpz_t*,
        bap_polynom_mpz*,
        ba0_mpz_t)
    void bap_HL_redistribute_the_factors_of_the_initial (bap_ideal_lifting*)
    void bap_HL_ideal_Hensel_lifting (
        bap_product_mpz*,
        bap_ideal_lifting*)
    void bap_monomial_reduce_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        ba0_mpz_t,
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    void bap_gcd_pseudo_division_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_product_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*)
    void bap_gcd_prem_polynom_mpz (
        bap_polynom_mpz*,
        bap_product_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*)
    void bap_gcd_pquo_polynom_mpz (
        bap_polynom_mpz*,
        bap_product_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*)
    void bap_eval_polynom_point_interval_mpq_mpz (
        ba0_interval_mpq*, 
        bap_polynom_mpz*, 
        bav_point_interval_mpq*)
    struct bap_factored_polynom_mpz:
        bap_product_mpz outer
        bap_polynom_mpz poly
    struct bap_tableof_factored_polynom_mpz:
        ba0_int_p alloc
        ba0_int_p size
        bap_factored_polynom_mpz** tab
    struct bap_gcd_data:
        bool proved_relatively_prime
        bap_product_mpz common
        bap_tableof_factored_polynom_mpz F
    void bap_gcd_univariate_tableof_polynom_mpz (
        bap_polynom_mpz*,
        bap_tableof_polynom_mpz*)
    void bap_gcdheu_tableof_polynom_mpz (
        bap_polynom_mpz*,
        bap_tableof_polynom_mpz*,
        ba0_int_p)
    void bap_extended_Zassenhaus_gcd_tableof_polynom_mpz (
        bap_product_mpz*,
        bap_tableof_polynom_mpz*,
        bool)
    void bap_gcd_tableof_polynom_mpz (
        bap_product_mpz*,
        bap_tableof_polynom_mpz*,
        bool)
    void bap_gcd_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    void bap_content_tableof_polynom_mpz (
        bap_product_mpz*,
        bap_tableof_polynom_mpz*,
        bav_variable*,
        bool)
    void bap_content_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*)
    void bap_primpart_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*)
    void bap_Yun_polynom_mpz (
        bap_product_mpz*,
        bap_polynom_mpz*,
        bool)
    void bap_squarefree_polynom_mpz (
        bap_product_mpz*,
        bap_polynom_mpz*)
    void bap_factor_easy_polynom_mpz (
        bap_product_mpz*,
        bap_polynom_mpz*,
        bap_listof_polynom_mpz*)
    void bap_factor_polynom_mpz (
        bap_product_mpz*,
        bap_polynom_mpz*)
    void bap_polynom_mpq_to_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpq*)
    void bap_polynom_mpz_to_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpz*)
    void bap_polynom_mint_hp_to_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mint_hp*)
    void bap_mods_polynom_mpzm (
        bap_polynom_mpz*,
        bap_polynom_mpzm*)
    void bap_mods_product_mpzm (
        bap_product_mpz*,
        bap_product_mpzm*)
    void bap_Bezout_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        ba0_mpz_t,
        bav_Idegree)
    void bap_coeftayl_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_value_int_p*,
        bav_Idegree)
    void bap_quorem_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_polynom_mpzm*,
        bav_rank*,
        bap_polynom_mpzm*,
        bap_polynom_mpzm*)
    void bap_uni_Diophante_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_product_mpzm*,
        bav_rank*,
        ba0_mpz_t,
        bav_Idegree)
    void bap_multi_Diophante_polynom_mpzm (
        bap_polynom_mpzm*,
        bap_product_mpzm*,
        bap_polynom_mpzm*,
        bav_point_int_p*,
        bav_Idegree,
        ba0_mpz_t,
        bav_Idegree)
    void bap_polynom_mpq_to_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpq*)
    void bap_polynom_mpz_to_mpq (
        bap_polynom_mpq*,
        bap_polynom_mpz*)
    void bap_product_mpz_to_mpq (
        bap_product_mpq*,
        bap_product_mpz*)
    void bap_numer_polynom_mpq (
        bap_polynom_mpz*,
        ba0_mpz_t,
        bap_polynom_mpq*)
    void bap_denom_polynom_mpq (
        ba0_mpz_t,
        bap_polynom_mpq*)
    void bap_factor_polynom_mpq (
        bap_product_mpq*,
        bap_polynom_mpq*)
    void bap_polynom_mpq_to_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mpq*)
    void bap_polynom_mpz_to_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mpz*)
    void bap_random_eval_polynom_mpz_to_mint_hp (
        bap_polynom_mint_hp*,
        bap_polynom_mpz*,
        ba0_unary_predicate*)
    void bap_Berlekamp_mint_hp (
        bap_product_mint_hp*,
        bap_polynom_mint_hp*)
    struct bap_ratfrac_mpz:
        bap_polynom_mpz numer
        bap_polynom_mpz denom
    struct bap_listof_ratfrac_mpz:
        bap_ratfrac_mpz* value
        bap_listof_ratfrac_mpz* next
    struct bap_tableof_ratfrac_mpz:
        ba0_int_p alloc
        ba0_int_p size
        bap_ratfrac_mpz** tab
    struct bap_matrixof_ratfrac_mpz:
        ba0_int_p alloc
        ba0_int_p nrow
        ba0_int_p ncol
        bap_ratfrac_mpz** entry
    void bap_init_ratfrac_mpz (bap_ratfrac_mpz*)
    void bap_init_readonly_ratfrac_mpz (bap_ratfrac_mpz*)
    bap_ratfrac_mpz* bap_new_ratfrac_mpz ()
    void bap_set_ratfrac_mpz (
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*)
    void bap_set_ratfrac_zero_mpz (bap_ratfrac_mpz*)
    void bap_set_ratfrac_one_mpz (bap_ratfrac_mpz*)
    void bap_set_ratfrac_polynom_mpz (
        bap_ratfrac_mpz*,
        bap_polynom_mpz*)
    void bap_set_ratfrac_fraction_mpz (
        bap_ratfrac_mpz*,
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    bool bap_is_zero_ratfrac_mpz (bap_ratfrac_mpz*)
    bool bap_is_one_ratfrac_mpz (bap_ratfrac_mpz*)
    bool bap_is_numeric_ratfrac_mpz (bap_ratfrac_mpz*)
    bool bap_depend_ratfrac_mpz (
        bap_ratfrac_mpz*,
        bav_variable*)
    bool bap_equal_ratfrac_mpz (
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*)
    void bap_sort_ratfrac_mpz (
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*)
    void bap_physort_ratfrac_mpz (
        bap_ratfrac_mpz*,
        bap_typeof_transform)
    void bap_numer_ratfrac_mpz (
        bap_polynom_mpz*,
        bap_ratfrac_mpz*)
    void bap_denom_ratfrac_mpz (
        bap_polynom_mpz*,
        bap_ratfrac_mpz*)
    bav_variable* bap_leader_ratfrac_mpz (bap_ratfrac_mpz*)
    bav_rank bap_rank_ratfrac_mpz (bap_ratfrac_mpz*)
    void bap_initial_ratfrac_mpz (
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*)
    void bap_reductum_ratfrac_mpz (
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*)
    void bap_lcoeff_and_reductum_ratfrac_mpz (
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*,
        bav_variable*)
    void bap_reduce_ratfrac_mpz (
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*)
    void bap_reduce_numeric_ratfrac_mpz (
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*)
    void bap_neg_ratfrac_mpz (
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*)
    void bap_add_ratfrac_mpz (
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*)
    void bap_sub_ratfrac_mpz (
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*)
    void bap_mul_ratfrac_numeric_mpz (
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*,
        ba0_mpz_t)
    void bap_mul_ratfrac_variable_mpz (
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*,
        bav_variable*,
        bav_Idegree)
    void bap_mul_ratfrac_mpz (
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*)
    void bap_pow_ratfrac_mpz (
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*,
        bav_Idegree)
    void bap_invert_ratfrac_mpz (
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*)
    void bap_div_ratfrac_mpz (
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*)
    void bap_separant_ratfrac_mpz (
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*)
    void bap_separant2_ratfrac_mpz (
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*,
        bav_variable*)
    void bap_diff_ratfrac_mpz (
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*,
        bav_symbol*,
        bav_tableof_variable*)
    bool bap_is_constant_ratfrac_mpz (
        bap_ratfrac_mpz*,
        bav_symbol*,
        bav_tableof_parameter*)
    enum bap_typeof_relop:
        bap_none_relop
        bap_equal_relop
        bap_not_equal_relop
        bap_greater_relop
        bap_greater_or_equal_relop
        bap_less_relop
        bap_less_or_equal_relop
    struct bap_rel_ratfrac_mpz:
        bap_ratfrac_mpz lhs
        bap_ratfrac_mpz rhs
        bap_typeof_relop op
    struct bap_tableof_rel_ratfrac_mpz:
        ba0_int_p alloc
        ba0_int_p size
        bap_rel_ratfrac_mpz** tab
    void bap_init_rel_ratfrac_mpz (bap_rel_ratfrac_mpz*)
    bap_rel_ratfrac_mpz* bap_new_rel_ratfrac_mpz ()
    void bap_set_rel_ratfrac_mpz (
        bap_rel_ratfrac_mpz*,
        bap_rel_ratfrac_mpz*)
    void bap_set_ratfrac_rel_ratfrac_mpz (
        bap_ratfrac_mpz*,
        bap_rel_ratfrac_mpz*)
    void bap_rat_bilge_mpz (
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*,
        bav_symbol*,
        bav_tableof_parameter*)
    struct bap_global:
         pass
    void bad_reset_all_settings ()
    void bad_restart (
        ba0_int_p,
        ba0_int_p)
    void bad_terminate (ba0_restart_level)
    void bad_init_stats (void*)
    enum bad_structural_property_attchain:
        bad_differential_structural_property
        bad_prime_structural_property
    enum bad_desired_property_attchain:
        bad_coherence_desired_property
        bad_autoreduced_desired_property
        bad_squarefree_desired_property
        bad_primitive_desired_property
        bad_normalized_desired_property
    struct bad_attchain:
        bav_Iordering ordering
        ba0_int_p structural_property
        ba0_int_p desired_property
    void bad_init_attchain (bad_attchain*)
    void bad_reset_attchain (bad_attchain*)
    void bad_set_attchain (
        bad_attchain*,
        bad_attchain*)
    void bad_intersect_attchain (
        bad_attchain*,
        bad_attchain*)
    void bad_set_properties_attchain (
        bad_attchain*,
        ba0_tableof_string*)
    void bad_set_automatic_properties_attchain (bad_attchain*)
    void bad_set_structural_properties_attchain (
        bad_attchain*,
        ba0_tableof_string*)
    void bad_set_desired_properties_attchain (
        bad_attchain*,
        ba0_tableof_string*)
    void bad_set_structural_property_attchain (
        bad_attchain*,
        bad_structural_property_attchain)
    void bad_set_desired_property_attchain (
        bad_attchain*,
        bad_desired_property_attchain)
    void bad_clear_structural_property_attchain (
        bad_attchain*,
        bad_structural_property_attchain)
    void bad_clear_desired_property_attchain (
        bad_attchain*,
        bad_desired_property_attchain)
    bool bad_is_a_structural_property_attchain (
        char*,
        bad_structural_property_attchain*)
    bool bad_is_a_desired_property_attchain (
        char*,
        bad_desired_property_attchain*)
    bool bad_has_structural_property_attchain (
        bad_attchain*,
        bad_structural_property_attchain)
    bool bad_has_desired_property_attchain (
        bad_attchain*,
        bad_desired_property_attchain)
    bool bad_defines_a_differential_ideal_attchain (bad_attchain*)
    bool bad_defines_a_prime_ideal_attchain (bad_attchain*)
    void bad_structural_properties_attchain (
        ba0_tableof_string*,
        bad_attchain*)
    void bad_desired_properties_attchain (
        ba0_tableof_string*,
        bad_attchain*)
    bool bad_equal_attchain (
        bad_attchain*,
        bad_attchain*)
    enum bad_typeof_dimension_lower_bound:
        bad_no_dimension_lower_bound
        bad_algebraic_dimension_lower_bound
        bad_ode_dimension_lower_bound
        bad_pde_dimension_lower_bound
    struct bad_splitting_control:
        bool first_leaf_only
        bad_typeof_dimension_lower_bound dimlb
        bool apply_dimlb_one_eq
    void bad_init_splitting_control (bad_splitting_control*)
    bad_splitting_control* bad_new_splitting_control ()
    void bad_set_splitting_control (
        bad_splitting_control*,
        bad_splitting_control*)
    void bad_set_first_leaf_only_splitting_control (
        bad_splitting_control*,
        bool)
    void bad_set_dimension_lower_bound_splitting_control (
        bad_splitting_control*,
        bad_typeof_dimension_lower_bound,
        bool)
    bool bad_apply_dimension_lower_bound_splitting_control (
        bad_splitting_control*,
        bap_listof_polynom_mpz*,
        bad_attchain*)
    struct bad_base_field:
        pass
    struct bad_regchain:
        ba0_int_p number
        bad_attchain attrib
        bap_tableof_polynom_mpz decision_system
    struct bad_tableof_regchain:
        ba0_int_p alloc
        ba0_int_p size
        bad_regchain** tab
    void bad_init_regchain (bad_regchain*)
    void bad_reset_regchain (bad_regchain*)
    bad_regchain* bad_new_regchain ()
    void bad_realloc_regchain (
        bad_regchain*,
        ba0_int_p)
    void bad_set_regchain (
        bad_regchain*,
        bad_regchain*)
    ba0_int_p bad_product_of_leading_degrees_regchain (bad_regchain*)
    void bad_remove_zero_derivatives_of_tableof_parameter_from_regchain (
        bad_regchain*,
        bad_regchain*,
        bav_tableof_parameter*)
    void bad_set_and_extend_regchain_tableof_polynom_mpz (
        bad_regchain*,
        bap_tableof_polynom_mpz*,
        bav_tableof_parameter*,
        ba0_tableof_string*,
        bool,
        bool)
    void bad_set_and_extend_regchain_tableof_ratfrac_mpz (
        bad_regchain*,
        bap_tableof_ratfrac_mpz*,
        bav_tableof_parameter*,
        ba0_tableof_string*,
        bool,
        bool)
    void bad_fast_primality_test_regchain (bad_regchain*)
    void bad_set_number_regchain (
        bad_regchain*,
        ba0_int_p)
    void bad_set_properties_regchain (
        bad_regchain*,
        ba0_tableof_string*)
    void bad_set_structural_properties_regchain (
        bad_regchain*,
        ba0_tableof_string*)
    void bad_set_desired_properties_regchain (
        bad_regchain*,
        ba0_tableof_string*)
    bool bad_has_desired_property_regchain (
        bad_regchain*,
        bad_desired_property_attchain)
    bool bad_has_structural_property_regchain (
        bad_regchain*,
        bad_structural_property_attchain)
    bool bad_defines_a_differential_ideal_regchain (bad_regchain*)
    bool bad_defines_a_prime_ideal_regchain (bad_regchain*)
    void bad_inequations_regchain (
        bap_tableof_polynom_mpz*,
        bad_regchain*)
    void bad_sort_regchain (
        bad_regchain*,
        bad_regchain*)
    bav_Iordering bad_ordering_eliminating_leaders_of_regchain (bad_regchain*)
    bool bad_is_rank_of_regchain (
        bav_rank*,
        bad_regchain*,
        ba0_int_p*)
    bool bad_is_leader_of_regchain (
        bav_variable*,
        bad_regchain*,
        ba0_int_p*)
    bool bad_is_derivative_of_leader_of_regchain (
        bav_variable*,
        bad_regchain*,
        ba0_int_p*)
    bool bad_is_solved_regchain (bad_regchain*)
    bool bad_is_orthonomic_regchain (bad_regchain*)
    bool bad_is_explicit_regchain (bad_regchain*)
    bool bad_is_zero_regchain (bad_regchain*)
    void bad_quench_regchain (
        bad_regchain*,
        bad_regchain*,
        ba0_int_p,
        bad_base_field*,
        bap_polynom_mpz**)
    ba0_int_p bad_codimension_regchain (
        bad_regchain*,
        bad_base_field*)
    struct bad_intersectof_regchain:
        pass
    void bad_quench_and_handle_exceptions_regchain (
        bad_intersectof_regchain*,
        ba0_int_p,
        bad_regchain*,
        bad_base_field*)
    void bad_handle_splitting_exceptions_regchain (
        bad_intersectof_regchain*,
        bap_polynom_mpz*,
        bad_regchain*,
        char*,
        bad_base_field*)
    ba0_int_p bad_sizeof_regchain (bad_regchain*)
    void bad_switch_ring_regchain (
        bad_regchain*,
        bav_differential_ring*)
    struct bad_base_field:
        bool differential
        bool assume_reduced
        bav_variable* varmax
        bad_regchain relations
    void bad_init_base_field (bad_base_field*)
    bad_base_field* bad_new_base_field ()
    void bad_set_base_field (
        bad_base_field*,
        bad_base_field*)
    void bad_force_algebraic_base_field (bad_base_field*)
    void bad_base_field_generators (
        bav_tableof_variable*,
        bad_base_field*)
    void bad_move_base_field_generator (
        bad_base_field*,
        bav_variable*)
    void bad_set_base_field_generators_and_relations (
        bad_base_field*,
        bav_tableof_variable*,
        bad_regchain*,
        bav_tableof_parameter*,
        bool,
        bool)
    void bad_base_field_implicit_generators (
        bav_tableof_variable*,
        bad_base_field*,
        bav_tableof_variable*,
        bad_regchain*)
    bool bad_is_a_compatible_base_field (
        bad_base_field*,
        bad_attchain*)
    bool bad_member_variable_base_field (
        bav_variable*,
        bad_base_field*)
    bool bad_member_nonzero_polynom_base_field (
        bap_polynom_mpz*,
        bad_base_field*)
    bool bad_member_polynom_base_field (
        bap_polynom_mpz*,
        bad_base_field*)
    struct bad_intersectof_regchain:
        bad_attchain attrib
        bad_tableof_regchain inter
    void bad_init_intersectof_regchain (bad_intersectof_regchain*)
    void bad_reset_intersectof_regchain (bad_intersectof_regchain*)
    bad_intersectof_regchain* bad_new_intersectof_regchain ()
    void bad_realloc_intersectof_regchain (
        bad_intersectof_regchain*,
        ba0_int_p)
    void bad_set_intersectof_regchain_regchain (
        bad_intersectof_regchain*,
        bad_regchain*)
    void bad_append_intersectof_regchain_regchain (
        bad_intersectof_regchain*,
        bad_regchain*)
    void bad_append_intersectof_regchain (
        bad_intersectof_regchain*,
        bad_intersectof_regchain*)
    void bad_set_intersectof_regchain (
        bad_intersectof_regchain*,
        bad_intersectof_regchain*)
    void bad_set_properties_intersectof_regchain (
        bad_intersectof_regchain*,
        ba0_tableof_string*)
    void bad_remove_redundant_components_intersectof_regchain (
        bad_intersectof_regchain*,
        bad_intersectof_regchain*,
        bad_base_field*)
    void bad_fast_primality_test_intersectof_regchain (bad_intersectof_regchain*)
    enum bad_typeof_reduction:
        bad_full_reduction
        bad_partial_reduction
        bad_algebraic_reduction
    enum bad_typeof_derivative_to_reduce:
        bad_all_derivatives_to_reduce
        bad_all_but_leader_to_reduce
    enum bad_typeof_reduction_strategy:
        bad_prem_reduction_strategy = 1
        bad_prem_and_change_of_ordering_reduction_strategy
        bad_gcd_prem_reduction_strategy
        bad_gcd_prem_and_factor_reduction_strategy
    enum bad_typeof_redzero_strategy:
        bad_deterministic_redzero_strategy = 1
        bad_probabilistic_redzero_strategy
        bad_deterministic_using_probabilistic_redzero_strategy
    enum bad_typeof_inclusion_test_result:
        bad_inclusion_test_positive
        bad_inclusion_test_negative
        bad_inclusion_test_uncertain
    void bad_set_settings_reduction (
        bad_typeof_reduction_strategy,
        bad_typeof_redzero_strategy,
        ba0_int_p)
    void bad_get_settings_reduction (
        bad_typeof_reduction_strategy*,
        bad_typeof_redzero_strategy*,
        ba0_int_p*)
    void bad_reduce_easy_polynom_by_regchain (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bad_regchain*,
        bad_typeof_reduction)
    void bad_ensure_initial_mod_regchain (
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bad_regchain*,
        bad_typeof_reduction)
    void bad_reduce_polynom_by_regchain (
        bap_product_mpz*,
        bap_product_mpz*,
        bap_polynom_mpz*,
        bad_regchain*,
        bad_typeof_reduction,
        bad_typeof_derivative_to_reduce)
    void bad_reduce_product_by_regchain (
        bap_product_mpz*,
        bap_product_mpz*,
        bap_product_mpz*,
        bad_regchain*,
        bad_typeof_reduction,
        bad_typeof_derivative_to_reduce)
    bool bad_is_a_reduced_to_zero_polynom_by_regchain (
        bap_polynom_mpz*,
        bad_regchain*,
        bad_typeof_reduction)
    bad_typeof_inclusion_test_result bad_is_included_regchain (
        bad_regchain*,
        bad_regchain*,
        bad_base_field*)
    bool bad_is_a_reduced_to_zero_product_by_regchain (
        bap_product_mpz*,
        bad_regchain*,
        bad_typeof_reduction)
    bool bad_is_a_reducible_polynom_by_regchain (
        bap_polynom_mpz*,
        bad_regchain*,
        bad_typeof_reduction,
        bad_typeof_derivative_to_reduce,
        bav_rank*,
        ba0_int_p*)
    bool bad_is_a_reducible_product_by_regchain (
        bap_product_mpz*,
        bad_regchain*,
        bad_typeof_reduction,
        bad_typeof_derivative_to_reduce,
        ba0_int_p*)
    bool bad_is_a_partially_reduced_polynom_wrt_regchain (
        bap_polynom_mpz*,
        bad_regchain*)
    bool bad_is_a_partially_reduced_product_wrt_regchain (
        bap_product_mpz*,
        bad_regchain*)
    void bad_reduced_to_zero_derivatives_by_regchain (
        bav_tableof_variable*,
        bad_regchain*,
        bad_typeof_reduction)
    enum bad_typeof_selection_strategy:
        bad_equation_first_selection_strategy
        bad_lower_leader_first_selection_strategy
    struct bad_selection_strategy:
        bad_typeof_selection_strategy strategy
        ba0_int_p penalty
    void bad_init_selection_strategy (bad_selection_strategy*)
    bad_selection_strategy* bad_new_selection_strategy ()
    void bad_set_strategy_selection_strategy (
        bad_selection_strategy*,
        bad_typeof_selection_strategy)
    void bad_set_penalty_selection_strategy (
        bad_selection_strategy*,
        ba0_int_p)
    void bad_double_penalty_selection_strategy (bad_selection_strategy*)
    enum bad_typeof_critical_pair:
        bad_normal_critical_pair
        bad_rejected_easy_critical_pair
    struct bad_critical_pair:
        bad_typeof_critical_pair tag
        bap_polynom_mpz p
        bap_polynom_mpz q
    struct bad_listof_critical_pair:
        bad_critical_pair* value
        bad_listof_critical_pair* next
    void bad_init_critical_pair (bad_critical_pair*)
    bad_critical_pair* bad_new_critical_pair ()
    bad_critical_pair* bad_new_critical_pair_polynom_mpz (
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    void bad_set_critical_pair (
        bad_critical_pair*,
        bad_critical_pair*)
    void bad_set_critical_pair_polynom_mpz (
        bad_critical_pair*,
        bap_polynom_mpz*,
        bap_polynom_mpz*)
    void bad_delta_polynom_critical_pair (
        bap_polynom_mpz*,
        bad_critical_pair*,
        bav_tableof_variable*)
    bool bad_is_a_reduction_critical_pair (bad_critical_pair*)
    bool bad_is_a_simpler_critical_pair (
        bad_critical_pair*,
        bad_critical_pair*,
        bad_selection_strategy*)
    bool bad_is_a_listof_rejected_critical_pair (bad_listof_critical_pair*)
    enum bad_typeof_splitting_edge:
        bad_any_edge 
        bad_first_edge 
        bad_factor_edge
        bad_regularisation_edge 
        bad_inisep_edge 
        bad_euclid_edge
        bad_reg_characteristic_edge
    struct bad_splitting_edge:
        ba0_int_p src
        ba0_int_p dst
        bad_typeof_splitting_edge type
    struct bad_tableof_splitting_edge:
        ba0_int_p alloc
        ba0_int_p size
        bad_splitting_edge** tab
    struct bad_splitting_tree:
        bad_tableof_splitting_edge edges
        ba0_int_p node_number
    void bad_init_splitting_edge (bad_splitting_edge*)
    bad_splitting_edge* bad_new_splitting_edge ()
    void bad_set_splitting_edge (
        bad_splitting_edge*,
        bad_splitting_edge*)
    void bad_set_node_type_splitting_edge (
        bad_splitting_edge*,
        ba0_int_p,
        ba0_int_p,
        bad_typeof_splitting_edge)
    void bad_init_splitting_tree (bad_splitting_tree*)
    bad_splitting_tree* bad_new_splitting_tree ()
    void bad_set_splitting_tree (
        bad_splitting_tree*,
        bad_splitting_tree*)
    ba0_int_p bad_next_node_splitting_tree (bad_splitting_tree*)
    void bad_append_edge_splitting_tree (
        bad_splitting_tree*,
        bad_splitting_tree*,
        ba0_int_p,
        ba0_int_p,
        bad_typeof_splitting_edge)
    void bad_dot_splitting_tree (bad_splitting_tree*)
    struct bad_quadruple:
        bad_regchain A
        bad_listof_critical_pair* D
        bap_listof_polynom_mpz* P
        bap_listof_polynom_mpz* S
        bad_splitting_edge edge
    struct bad_tableof_quadruple:
        ba0_int_p alloc
        ba0_int_p size
        bad_quadruple** tab
    struct bad_listof_quadruple:
        bad_quadruple* value
        bad_listof_quadruple* next
    void bad_init_quadruple (bad_quadruple*)
    bad_quadruple* bad_new_quadruple ()
    void bad_set_quadruple (
        bad_quadruple*,
        bad_quadruple*)
    ba0_int_p bad_node_quadruple (bad_quadruple*)
    void bad_set_node_quadruple (
        bad_quadruple*,
        ba0_int_p,
        bad_typeof_splitting_edge,
        bad_splitting_tree*)
    bool bad_first_case_quadruple (bad_quadruple*)
    bap_listof_polynom_mpz* bad_insert_in_listof_polynom_mpz (
        bap_polynom_mpz*,
        bap_listof_polynom_mpz*)
    bap_listof_polynom_mpz* bad_delete_from_listof_polynom_mpz (
        bap_polynom_mpz*,
        bap_listof_polynom_mpz*,
        bool*)
    void bad_preprocess_equation (
        bap_product_mpz*,
        bap_tableof_polynom_mpz*,
        bap_tableof_product_mpz*,
        bad_quadruple*,
        bad_base_field*)
    void bad_report_simplification_of_inequations (
        bad_tableof_quadruple*,
        bap_tableof_polynom_mpz*,
        bap_tableof_product_mpz*)
    void bad_split_on_factors_of_equations (
        bad_tableof_quadruple*,
        bap_product_mpz*,
        bap_product_mpz*,
        bad_typeof_splitting_edge,
        bad_splitting_tree*)
    bool bad_simplify_and_store_in_P_quadruple (
        bad_quadruple*,
        bap_polynom_mpz*,
        bad_base_field*)
    bool bad_simplify_and_store_in_S_quadruple (
        bad_quadruple*,
        bap_polynom_mpz*,
        bad_base_field*)
    void bad_pick_and_remove_quadruple (
        bap_polynom_mpz*,
        bad_quadruple*,
        bad_critical_pair**,
        bad_selection_strategy*)
    void bad_reg_characteristic_quadruple (
        bad_intersectof_regchain*,
        bad_quadruple*,
        bad_regchain*,
        bad_base_field*)
    void bad_complete_quadruple (
        bad_tableof_quadruple*,
        bap_polynom_mpz*,
        bad_regchain*,
        bad_base_field*,
        bad_selection_strategy*,
        bad_splitting_tree*)
    enum bad_typeof_regularize_strategy:
        bad_subresultant_regularize_strategy = 1
        bad_gcd_prem_regularize_strategy
        bad_gcd_prem_and_factor_regularize_strategy
    enum bad_typeof_Euclid:
        bad_basic_Euclid
        bad_half_extended_Euclid
        bad_extended_Euclid
    enum bad_typeof_context:
        bad_inverse_context
        bad_pardi_context
        bad_rg_context
    void bad_set_settings_regularize (bad_typeof_regularize_strategy)
    void bad_get_settings_regularize (bad_typeof_regularize_strategy*)
    void bad_Euclid_mod_regchain (
        bap_tableof_tableof_polynom_mpz*,
        bad_tableof_quadruple*,
        bad_typeof_Euclid,
        bap_polynom_mpz*,
        bap_polynom_mpz*,
        bav_variable*,
        bool,
        bool,
        bad_regchain*,
        bad_base_field*,
        bap_polynom_mpz**)
    void bad_check_regularity_polynom_mod_regchain (
        bap_polynom_mpz*,
        bad_regchain*,
        bad_base_field*,
        bap_polynom_mpz**)
    void bad_reg_characteristic_regchain (
        bad_intersectof_regchain*,
        bap_listof_polynom_mpz*,
        bad_regchain*,
        bad_base_field*)
    void bad_invert_polynom_mod_regchain (
        bap_product_mpz*,
        bap_product_mpz*,
        bap_polynom_mpz*,
        bad_regchain*,
        bap_polynom_mpz**)
    void bad_invert_product_mod_regchain (
        bap_product_mpz*,
        bap_product_mpz*,
        bap_product_mpz*,
        bad_regchain*,
        bap_polynom_mpz**)
    void bad_normal_form_polynom_mod_regchain (
        bap_ratfrac_mpz*,
        bap_polynom_mpz*,
        bad_regchain*,
        bap_polynom_mpz**)
    void bad_normal_form_ratfrac_mod_regchain (
        bap_ratfrac_mpz*,
        bap_ratfrac_mpz*,
        bad_regchain*,
        bap_polynom_mpz**)
    void bad_normal_form_ratfrac_mod_intersectof_regchain (
        bap_tableof_ratfrac_mpz*,
        bap_ratfrac_mpz*,
        bad_intersectof_regchain*,
        bap_polynom_mpz**)
    void bad_normal_form_handling_exceptions_ratfrac_mod_regchain (
        bap_tableof_ratfrac_mpz*,
        bad_intersectof_regchain*,
        bad_intersectof_regchain*,
        bap_ratfrac_mpz*)
    void bad_invert_polynom_mod_regchain (
        bap_product_mpz*,
        bap_product_mpz*,
        bap_polynom_mpz*,
        bad_regchain*,
        bap_polynom_mpz**)
    void bad_invert_product_mod_regchain (
        bap_product_mpz*,
        bap_product_mpz*,
        bap_product_mpz*,
        bad_regchain*,
        bap_polynom_mpz**)
    void bad_iterated_lsr3_product_mod_regchain (
        bap_product_mpz*,
        bap_product_mpz*,
        bap_product_mpz*,
        bad_regchain*)
    void bad_reduced_form_polynom_mod_regchain (
        bap_ratfrac_mpz*,
        bap_polynom_mpz*,
        bav_variable*,
        bad_regchain*)
    void bad_reduced_form_polynom_mod_intersectof_regchain (
        bap_tableof_ratfrac_mpz*,
        bap_polynom_mpz*,
        bav_variable*,
        bad_intersectof_regchain*)
    void bad_set_settings_preparation (char*)
    void bad_get_settings_preparation (char**)
    struct bad_preparation_term:
        ba0_tableof_int_p z
        bav_tableof_term theta
        bav_tableof_Idegree deg
    struct bad_tableof_preparation_term:
        ba0_int_p alloc
        ba0_int_p size
        bad_preparation_term** tab
    struct bad_preparation_equation:
        bap_product_mpz H
        bap_tableof_polynom_mpz coeffs
        bad_tableof_preparation_term terms
        bap_polynom_mpz* F
        __mpz_struct* denom
        bad_regchain* A
        bad_base_field* K
    void bad_init_preparation_equation (bad_preparation_equation*)
    bad_preparation_equation* bad_new_preparation_equation ()
    void bad_set_preparation_equation_polynom (
        bad_preparation_equation*,
        bap_polynom_mpz*,
        ba0_mpz_t,
        bad_regchain*,
        bad_base_field*,
        bap_polynom_mpz**)
    void bad_check_preparation_equation (bad_preparation_equation*)
    void bad_preparation_congruence (
        ba0_int_p*,
        bav_Idegree*,
        bad_preparation_equation*)
    bool bad_low_power_theorem_condition_to_be_a_component (bad_preparation_equation* E)
    void bad_low_power_theorem_simplify_intersectof_regchain (
        bad_intersectof_regchain*,
        bad_intersectof_regchain*,
        bad_base_field*)
    void bad_pardi (
        bad_regchain*,
        bav_Iordering,
        bad_regchain*)
    void bad_Rosenfeld_Groebner (
        bad_intersectof_regchain*,
        bap_tableof_polynom_mpz*,
        bap_tableof_polynom_mpz*,
        bad_base_field*,
        bad_splitting_control*)
    struct bad_global:
         pass
    struct bad_initialized_global:
         pass
    void bai_restart (
        ba0_int_p,
        ba0_int_p)
    void bai_terminate (ba0_restart_level)
    struct bai_parameters:
        double* values
        void* names
    ctypedef double bai_command_function (
        double,
        void*)
    struct bai_commands:
        bai_command_function** fptrs
        void* names
    struct bai_params:
        bai_parameters pars
        bai_commands cmds
        void* extra
    enum bai_odex_exit_code:
        bai_odex_success = 0
        bai_odex_non_finite = 1
    ctypedef bai_odex_exit_code bai_odex_integrated_function (
        double,
        double*,
        double*,
        void*)
    ctypedef bai_odex_exit_code bai_odex_jacobianof_integrated_function (
        double,
        double*,
        double*,
        double*,
        void*)
    struct bai_odex_system:
        bav_variable* t
        bav_tableof_variable lhs
        bap_tableof_ratfrac_mpz rhs
        bav_tableof_variable params
        bav_tableof_variable commands
    void bai_init_odex_system (bai_odex_system*)
    void bai_reset_odex_system (bai_odex_system*)
    bai_odex_system* bai_new_odex_system ()
    void bai_set_odex_system (
        bai_odex_system*,
        bai_odex_system*)
    void bai_set_odex_system_tables (
        bai_odex_system*,
        bav_variable*,
        bav_tableof_variable*,
        bav_tableof_variable*,
        bav_tableof_variable*,
        bap_tableof_ratfrac_mpz*)
    void bai_set_odex_system_regchain (
        bai_odex_system*,
        bav_variable*,
        bav_tableof_variable*,
        bav_tableof_variable*,
        bav_tableof_variable*,
        bad_regchain*)
    bool bai_odex_is_lhs (
        bav_variable*,
        bai_odex_system*,
        ba0_int_p*)
    void bai_odex_generate_rhs_C_code (
        FILE*,
        char*,
        bai_odex_system*)
    void bai_odex_generate_jacobianof_rhs_C_code (
        FILE*,
        char*,
        bai_odex_system*)
    void bai_init_params (bai_params*)
    void bai_reset_params (bai_params*)
    bai_params* bai_new_params ()
    void bai_set_params (
        bai_params*,
        bai_params*)
    struct bai_odex_system:
        pass
    void bai_set_params_odex_system (
        bai_params*,
        bai_odex_system*)
    void bai_set_params_parameter (
        bai_params*,
        bav_variable*,
        double)
    void bai_set_params_command (
        bai_params*,
        bav_variable*,
        bai_command_function*)
    struct bai_dop853_initial_values:
        double t0
        double t1
        ba0_arrayof_double y0
    void bai_dop853_init_initial_values (bai_dop853_initial_values*)
    void bai_dop853_reset_initial_values (bai_dop853_initial_values*)
    bai_dop853_initial_values* bai_dop853_new_initial_values ()
    void bai_dop853_realloc_initial_values (
        bai_dop853_initial_values*,
        ba0_int_p)
    void bai_dop853_set_initial_values_time (
        bai_dop853_initial_values*,
        double,
        double)
    void bai_dop853_set_initial_values_variable (
        bai_dop853_initial_values*,
        bav_variable*,
        bai_odex_system*,
        double)
    void bai_dop853_set_initial_values (
        bai_dop853_initial_values*,
        bai_dop853_initial_values*)
    struct bai_dop853_setting:
        double uround
        double safe_fac
        double fac1
        double fac2
        double beta
        double hmax
        double h0
        ba0_int_p nb_max_steps
        ba0_int_p stiffness_test_step
    void bai_dop853_init_setting (bai_dop853_setting*)
    void bai_dop853_reset_setting (bai_dop853_setting*)
    void bai_dop853_set_setting (
        bai_dop853_setting*,
        bai_dop853_setting*)
    void bai_dop853_set_default_setting (bai_dop853_setting*)
    struct bai_dop853_stats:
        ba0_int_p nb_evals         
        ba0_int_p nb_steps         
        ba0_int_p nb_accepts       
        ba0_int_p nb_rejects       
    void bai_dop853_init_stats (bai_dop853_stats*)
    void bai_dop853_reset_stats (bai_dop853_stats*)
    void bai_dop853_set_stats (
        bai_dop853_stats*,
        bai_dop853_stats*)
    enum bai_dop853_typeof_errtol:
        bai_dop853_global_errtol
        bai_dop853_componentwise_errtol
    struct bai_dop853_errtol:
        bai_dop853_typeof_errtol type
        ba0_arrayof_double relative
        ba0_arrayof_double absolute
    void bai_dop853_init_errtol (bai_dop853_errtol*)
    void bai_dop853_reset_errtol (bai_dop853_errtol*)
    void bai_dop853_set_default_errtol (bai_dop853_errtol*)
    void bai_dop853_set_errtol (
        bai_dop853_errtol*,
        bai_dop853_errtol*)
    void bai_dop853_realloc_errtol (
        bai_dop853_errtol*,
        ba0_int_p)
    ctypedef double bai_dop853_eval_function (
        double t,
        void* workspace)
    struct bai_dop853_view_elt:
        bool isvar
        ba0_int_p varnum
        bai_dop853_eval_function* eval
    struct bai_arrayof_view_elt:
        ba0_int_p alloc
        ba0_int_p size
        bai_dop853_view_elt* tab
        ba0_int_p sizelt
    struct bai_dop853_view:
        bool view_t
        bai_arrayof_view_elt elts
    void bai_dop853_init_view (bai_dop853_view*)
    void bai_dop853_reset_view (bai_dop853_view*)
    void bai_dop853_realloc_view (
        bai_dop853_view*,
        ba0_int_p)
    void bai_dop853_set_view_variable (
        bai_dop853_view*,
        bav_variable*,
        bai_odex_system*)
    void bai_dop853_set_view_function (
        bai_dop853_view*,
        bai_dop853_eval_function*)
    struct bai_dop853_workspace:
        pass
    void bai_dop853_solout (
        FILE*,
        bai_dop853_workspace*,
        bai_dop853_view*,
        bool,
        double)
    struct bai_dop853_dense_output:
        ba0_tableof_int_p index
        ba0_arrayof_double cont0
        ba0_arrayof_double cont1
        ba0_arrayof_double cont2
        ba0_arrayof_double cont3
        ba0_arrayof_double cont4
        ba0_arrayof_double cont5
        ba0_arrayof_double cont6
        ba0_arrayof_double cont7
    void bai_dop853_init_dense_output (bai_dop853_dense_output*)
    void bai_dop853_reset_dense_output (bai_dop853_dense_output*)
    void bai_dop853_realloc_dense_output (
        bai_dop853_dense_output*,
        ba0_int_p)
    void bai_dop853_set_dense_output_all_variables (
        bai_dop853_dense_output*,
        bai_odex_system*)
    void bai_dop853_set_dense_output_variable (
        bai_dop853_dense_output*,
        bav_variable*,
        bai_odex_system*)
    void bai_dop853_set_dense_output (
        bai_dop853_dense_output* v,
        bai_dop853_dense_output* w)
    double bai_dop853_dense_output_evaluate (
        ba0_int_p i,
        double t,
        bai_dop853_workspace* w)
    struct bai_dop853_workspace:
        double told
        double t
        double h
        ba0_arrayof_double y
        ba0_arrayof_double y1
        ba0_arrayof_double k1
        ba0_arrayof_double k2
        ba0_arrayof_double k3
        ba0_arrayof_double k4
        ba0_arrayof_double k5
        ba0_arrayof_double k6
        ba0_arrayof_double k7
        ba0_arrayof_double k8
        ba0_arrayof_double k9
        ba0_arrayof_double k10
        double hlamb
        ba0_int_p nb_stiffs
        ba0_int_p nb_non_stiffs
        double facold
        bai_dop853_stats stat
        bai_odex_integrated_function* fcn
        bai_dop853_initial_values iv
        bai_dop853_errtol tol
        bai_dop853_setting setting
        bai_dop853_dense_output dow
        void* params
    void bai_dop853_init_workspace (bai_dop853_workspace*)
    void bai_dop853_reset_workspace (bai_dop853_workspace*)
    void bai_dop853_set_workspace (
        bai_dop853_workspace*,
        bai_dop853_workspace*)
    void bai_dop853_start_workspace (
        bai_dop853_workspace*,
        bai_odex_integrated_function*  fcn,
        bai_dop853_initial_values* iv,
        bai_dop853_errtol* tol,
        bai_dop853_setting* setting,
        bai_dop853_dense_output* dow,
        void* params)
    void bai_dop853_step_workspace (bai_dop853_workspace*)
    double bai_dop853_evaluate_variable (
        bav_variable* v,
        double t,
        bai_dop853_workspace* w,
        bai_odex_system*)
    struct bai_global:
         pass
